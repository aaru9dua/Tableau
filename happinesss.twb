<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0323.1706                               -->
<workbook original-version='18.1' source-build='2019.4.5 (20194.20.0323.1706)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='GDP' caption='choose the factor' datatype='real' name='[Freedom Parameter]' param-domain-type='list' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <aliases>
          <alias key='1.0' value='Trust' />
          <alias key='2.0' value='Generosity' />
          <alias key='3.0' value='GDP' />
          <alias key='4.0' value='family' />
        </aliases>
        <members>
          <member alias='Trust' value='1.0' />
          <member alias='Generosity' value='2.0' />
          <member alias='GDP' value='3.0' />
          <member alias='family' value='4.0' />
        </members>
      </column>
    </datasource>
    <datasource caption='2016' inline='true' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2016' name='textscan.09eyggv17hz56m1bqabp20hhyrdq'>
            <connection class='textscan' directory='C:/Users/Aarushi/Desktop/spyder/happiness report' filename='2016.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.09eyggv17hz56m1bqabp20hhyrdq' name='2016.csv' table='[2016#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='3' />
            <column datatype='real' name='Family' ordinal='4' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='5' />
            <column datatype='real' name='Freedom' ordinal='6' />
            <column datatype='real' name='Trust (Government Corruption)' ordinal='7' />
            <column datatype='real' name='Generosity' ordinal='8' />
            <column datatype='real' name='Dystopia Residual' ordinal='9' />
            <column datatype='real' name='Happiness Score' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[2016.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='score' datatype='string' name='[Calculation_219269033323868160]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if AVG([Happiness Score])&gt;7&#13;&#10;THEN &quot;&gt;7&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=7 AND AVG([Happiness Score])&gt;5&#13;&#10;THEN &quot;5-7&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=5 AND AVG([Happiness Score])&gt;3&#13;&#10;THEN &quot;3-5&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=3 AND AVG([Happiness Score])&gt;1&#13;&#10;THEN &quot;1-3&quot;&#13;&#10;END' />
      </column>
      <column caption='measure' datatype='real' name='[Calculation_779685710810013697]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Freedom Parameter]&#13;&#10;&#13;&#10;WHEN 1 THEN AVG([Trust (Government Corruption)])&#13;&#10;WHEN 2 THEN AVG([Generosity])&#13;&#10;WHEN 3 THEN AVG([Economy (GDP per Capita)])&#13;&#10;WHEN  4 THEN AVG([Family])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Country_satisfaction(group)' datatype='string' name='[Country1 (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;dissatisfied&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo (Brazzaville)&quot;</value>
            <value>&quot;Congo (Kinshasa)&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Ivory Coast&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Palestinian Territories&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;netural&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;North Cyprus&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;Somaliland Region&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;satisfied&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Dystopia Residual]' role='measure' type='quantitative' />
      <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Family]' role='measure' type='quantitative' />
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
      <column-instance column='[Dystopia Residual]' derivation='Avg' name='[avg:Dystopia Residual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Avg' name='[avg:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Family]' derivation='Avg' name='[avg:Family:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Avg' name='[avg:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Avg' name='[avg:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption)]' derivation='Avg' name='[avg:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Count' name='[cnt:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 3]' derivation='InOut' name='[io:Set 3:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness Score]' derivation='Median' name='[med:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='None' name='[none:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='None' name='[none:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dystopia Residual]' derivation='Sum' name='[sum:Dystopia Residual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Family]' derivation='Sum' name='[sum:Family:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption)]' derivation='Sum' name='[sum:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_219269033323868160]' derivation='User' name='[usr:Calculation_219269033323868160:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_779685710810013697]' derivation='User' name='[usr:Calculation_779685710810013697:qk]' pivot='key' type='quantitative' />
      <group caption='top 10 happy country' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Switzerland&quot;' />
        </groupfilter>
      </group>
      <group caption='combined' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 3]' function='reference' />
          <groupfilter field='[Set 1]' function='reference' />
        </groupfilter>
      </group>
      <group caption='least 10 happy countries' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Benin&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Burundi&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guinea&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Madagascar&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Rwanda&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Syria&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Tanzania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Togo&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='geography'>
          <field>[Region]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Aarushi/Documents/My Tableau Repository/Workbooks/2016.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/14/2020 12:03:48 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='2016' increment-value='%null%' refresh-type='create' rows-inserted='157' timestamp-start='2020-04-14 12:03:48.847' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness Rank</remote-alias>
              <ordinal>2</ordinal>
              <family>2016.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>154</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economy (GDP per Capita)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economy (GDP per Capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economy (GDP per Capita)</remote-alias>
              <ordinal>3</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Family</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Family]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Family</remote-alias>
              <ordinal>4</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health (Life Expectancy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health (Life Expectancy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health (Life Expectancy)</remote-alias>
              <ordinal>5</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>6</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trust (Government Corruption)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trust (Government Corruption)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trust (Government Corruption)</remote-alias>
              <ordinal>7</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>8</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dystopia Residual</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dystopia Residual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dystopia Residual</remote-alias>
              <ordinal>9</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness Score</remote-alias>
              <ordinal>10</ordinal>
              <family>2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>154</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.210031' group-percentage='0.125392' measure-ordering='alphabetic' measure-percentage='0.617555' parameter-percentage='0.0470219' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Set 3:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[io:Set 1:nk]' type='shape'>
            <map to='circle'>
              <bucket>true</bucket>
            </map>
            <map to='square'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_219269033323868160:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1-3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;&gt;7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5-7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3-5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[pcto:sum:Economy (GDP per Capita):qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[pcto:sum:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Dystopia Residual:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Dystopia Residual:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[cnt:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Rank:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Trust (Government Corruption):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[med:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Family:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Family:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='GDP' caption='choose the factor' datatype='real' name='[Freedom Parameter]' param-domain-type='list' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <aliases>
            <alias key='1.0' value='Trust' />
            <alias key='2.0' value='Generosity' />
            <alias key='3.0' value='GDP' />
            <alias key='4.0' value='family' />
          </aliases>
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{3b58fedf-b53b-474e-8427-376e5e53ca1b}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
    <datasource caption='2015+2016' inline='true' name='federated.0hj5cyp1fb6mrs1c4hb491oq848e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2015' name='textscan.0dh24bk1pvatvc1bs7gpy1kdb4u8'>
            <connection class='textscan' directory='C:/Users/Aarushi/Desktop/spyder/happiness report' filename='2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Union' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' />
            <column datatype='string' name='Region' />
            <column datatype='integer' name='Happiness Rank' />
            <column datatype='real' name='Economy (GDP per Capita)' />
            <column datatype='real' name='Family' />
            <column datatype='real' name='Health (Life Expectancy)' />
            <column datatype='real' name='Freedom' />
            <column datatype='real' name='Trust (Government Corruption)' />
            <column datatype='real' name='Generosity' />
            <column datatype='real' name='Dystopia Residual' />
            <column datatype='real' name='Happiness Score' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0dh24bk1pvatvc1bs7gpy1kdb4u8' name='2015.csv' table='[2015#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='integer' name='Happiness Rank' ordinal='2' />
              <column datatype='real' name='Economy (GDP per Capita)' ordinal='3' />
              <column datatype='real' name='Family' ordinal='4' />
              <column datatype='real' name='Health (Life Expectancy)' ordinal='5' />
              <column datatype='real' name='Freedom' ordinal='6' />
              <column datatype='real' name='Trust (Government Corruption)' ordinal='7' />
              <column datatype='real' name='Generosity' ordinal='8' />
              <column datatype='real' name='Dystopia Residual' ordinal='9' />
              <column datatype='real' name='Happiness Score' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.0dh24bk1pvatvc1bs7gpy1kdb4u8' name='2016.csv' table='[2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
              <column datatype='integer' name='Happiness Rank' ordinal='2' />
              <column datatype='real' name='Economy (GDP per Capita)' ordinal='3' />
              <column datatype='real' name='Family' ordinal='4' />
              <column datatype='real' name='Health (Life Expectancy)' ordinal='5' />
              <column datatype='real' name='Freedom' ordinal='6' />
              <column datatype='real' name='Trust (Government Corruption)' ordinal='7' />
              <column datatype='real' name='Generosity' ordinal='8' />
              <column datatype='real' name='Dystopia Residual' ordinal='9' />
              <column datatype='real' name='Happiness Score' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run> bjki</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='top 10' datatype='boolean' name='[Calculation_1943021803363282944]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Happiness Rank]&lt;=10&#13;&#10;THEN TRUE&#13;&#10;END' />
      </column>
      <column caption='increase or decrease' datatype='boolean' name='[Calculation_219269033385373698]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LOOKUP(AVG([Happiness Score]),FIRST())&gt;LOOKUP(AVG([Happiness Score]),LAST())'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_370984059669463043]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  AVG([Happiness Score])&lt;4&#13;&#10;THEN &quot;satified&quot;&#13;&#10;ELSE &quot;dis&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;dissatisfied&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo (Brazzaville)&quot;</value>
            <value>&quot;Congo (Kinshasa)&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Ivory Coast&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Palestinian Territories&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somaliland Region&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;satisfied&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;North Cyprus&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='year' datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2015.csv&quot;' value='2015' />
          <alias key='&quot;2016.csv&quot;' value='2016' />
        </aliases>
      </column>
      <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Happiness Score,Table Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Happiness Score:qk]' />
          <groupfilter function='level-members' level='[none:Table Name:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='geography'>
          <field>[Region]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.307463' measure-ordering='alphabetic' measure-percentage='0.616418' parameter-percentage='0.0761194' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East and Northern Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeastern Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central and Eastern Europe&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;satisfied&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;dissatisfied&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='a/b'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Bahnschrift'>which year has more satisfied countries?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015+2016' name='federated.0hj5cyp1fb6mrs1c4hb491oq848e' />
          </datasources>
          <datasource-dependencies datasource='federated.0hj5cyp1fb6mrs1c4hb491oq848e'>
            <column datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;dissatisfied&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Congo (Kinshasa)&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ivory Coast&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestinian Territories&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somaliland Region&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;satisfied&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;North Cyprus&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='year' datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2015.csv&quot;' value='2015' />
                <alias key='&quot;2016.csv&quot;' value='2016' />
              </aliases>
            </column>
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country (group) 1]' member='&quot;dissatisfied&quot;' />
              <groupfilter function='member' level='[Country (group) 1]' member='&quot;satisfied&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]' value='154' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]' />
              <text column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[pcto:sum:Number of Records:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[pcto:sum:Number of Records:qk:2]</rows>
        <cols>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{6774E3D9-5522-4D5A-B2F3-DB9689A750F4}' />
    </worksheet>
    <worksheet name='bottom10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Bahnschrift'>least 10 happy countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Happiness Rank])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</column>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' value='136' />
            <format attr='height' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B99EB967-E0AF-4526-8F04-8334FF6D23D3}' />
    </worksheet>
    <worksheet name='box plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Bahnschrift'>Happiness score  Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015+2016' name='federated.0hj5cyp1fb6mrs1c4hb491oq848e' />
          </datasources>
          <datasource-dependencies datasource='federated.0hj5cyp1fb6mrs1c4hb491oq848e'>
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column caption='year' datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2015.csv&quot;' value='2015' />
                <alias key='&quot;2016.csv&quot;' value='2016' />
              </aliases>
            </column>
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]'>
            <groupfilter function='level-members' level='[none:Table Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Happiness Score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Happiness Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Happiness Score:qk]</rows>
        <cols>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{72BD85CA-3CD1-4971-A545-E2E46B2F885E}' />
    </worksheet>
    <worksheet name='cluster'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cluster wise happiness score of various regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{3b58fedf-b53b-474e-8427-376e5e53ca1b}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' field-type='quantitative' max='9.2350368730211034' min='-2.8093184192273637' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:AdhocCluster:1:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]</rows>
        <cols>([federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk] / [federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk])</cols>
      </table>
      <simple-id uuid='{83635CE3-8F15-4F34-BC1D-C75DF3366CD2}' />
    </worksheet>
    <worksheet name='countries wise measure'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Narrow'>country wise measure</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column caption='Country_satisfaction(group)' datatype='string' name='[Country1 (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;dissatisfied&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo (Brazzaville)&quot;</value>
                  <value>&quot;Congo (Kinshasa)&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ivory Coast&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Palestinian Territories&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;netural&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;North Cyprus&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Somaliland Region&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;satisfied&quot;'>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Dystopia Residual]' role='measure' type='quantitative' />
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Family]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dystopia Residual]' derivation='Sum' name='[sum:Dystopia Residual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Family]' derivation='Sum' name='[sum:Family:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust (Government Corruption)]' derivation='Sum' name='[sum:Trust (Government Corruption):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Dystopia Residual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Family:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Health (Life Expectancy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Trust (Government Corruption):qk]&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' direction='ASC' />
          <slices>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Multiple Values]' field-type='quantitative' max='15.773675897915483' min='1.406239106096149' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' value='16' />
            <format attr='height' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Country1 (group)]' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Country1 (group)] / [federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk])</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{48EE8D88-7E40-4FC9-930E-CBCDA65203B5}' />
    </worksheet>
    <worksheet name='country wise happiness'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Bahnschrift Condensed' fontsize='20'>Country wise Happiness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column caption='score' datatype='string' name='[Calculation_219269033323868160]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if AVG([Happiness Score])&gt;7&#13;&#10;THEN &quot;&gt;7&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=7 AND AVG([Happiness Score])&gt;5&#13;&#10;THEN &quot;5-7&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=5 AND AVG([Happiness Score])&gt;3&#13;&#10;THEN &quot;3-5&quot;&#13;&#10;ELSEIF AVG([Happiness Score])&lt;=3 AND AVG([Happiness Score])&gt;1&#13;&#10;THEN &quot;1-3&quot;&#13;&#10;END' />
            </column>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_219269033323868160]' derivation='User' name='[usr:Calculation_219269033323868160:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Longitude (generated)]' field-type='quantitative' max='20354171.143698417' min='-15801064.651170854' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Latitude (generated)]' field-type='quantitative' max='14108740.570813285' min='-6891254.674655173' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]' />
              <lod column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' />
              <geometry column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Latitude (generated)]</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{988E8C75-9166-4789-B918-690C61C996CD}' />
    </worksheet>
    <worksheet name='freedom'>
      <layout-options>
        <title>
          <formatted-text>
            <run>how Freedom measure in top and least happy countries?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 2]' />
          <slices>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' field-type='quantitative' max='7.5856451522512023' min='0.4017358472449386' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Freedom:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
                <format attr='density-kernel-size' value='0.66966849565505981' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
                <format attr='density-kernel-size' value='0.66966849565505981' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
                <format attr='density-kernel-size' value='0.66966849565505981' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 2]</rows>
        <cols>([federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk] + [federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Freedom:qk])</cols>
      </table>
      <simple-id uuid='{E452E763-335A-4AE1-B0ED-0D0A93FC3D64}' />
    </worksheet>
    <worksheet name='gdp/generosity/family'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happiness score vs Trust/Generosity/GDP/Family</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='GDP' caption='choose the factor' datatype='real' name='[Freedom Parameter]' param-domain-type='list' role='measure' type='quantitative' value='3.0'>
              <calculation class='tableau' formula='3.0' />
              <aliases>
                <alias key='1.0' value='Trust' />
                <alias key='2.0' value='Generosity' />
                <alias key='3.0' value='GDP' />
                <alias key='4.0' value='family' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column caption='measure' datatype='real' name='[Calculation_779685710810013697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Freedom Parameter]&#13;&#10;&#13;&#10;WHEN 1 THEN AVG([Trust (Government Corruption)])&#13;&#10;WHEN 2 THEN AVG([Generosity])&#13;&#10;WHEN 3 THEN AVG([Economy (GDP per Capita)])&#13;&#10;WHEN  4 THEN AVG([Family])&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Family]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust (Government Corruption)]' role='measure' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_779685710810013697]' derivation='User' name='[usr:Calculation_779685710810013697:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]' />
              <size column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]</cols>
      </table>
      <simple-id uuid='{813DC9BD-C855-4F56-BA3F-7DFACC5570AA}' />
    </worksheet>
    <worksheet name='increase or decrease'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Bahnschrift Condensed' fontsize='20'>region wise increase or decrease in happiness score</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2015+2016' name='federated.0hj5cyp1fb6mrs1c4hb491oq848e' />
          </datasources>
          <datasource-dependencies datasource='federated.0hj5cyp1fb6mrs1c4hb491oq848e'>
            <column caption='increase or decrease' datatype='boolean' name='[Calculation_219269033385373698]' role='measure' type='nominal'>
              <calculation class='tableau' formula='LOOKUP(AVG([Happiness Score]),FIRST())&gt;LOOKUP(AVG([Happiness Score]),LAST())'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='year' datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2015.csv&quot;' value='2015' />
                <alias key='&quot;2016.csv&quot;' value='2016' />
              </aliases>
            </column>
            <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_219269033385373698]' derivation='User' name='[usr:Calculation_219269033385373698:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southern Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[avg:Happiness Score:qk]' field-type='quantitative' max='7.6043756939234806' min='2.5' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]' value='401' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Country:nk]' />
              <lod column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Country:nk]' />
              <color column='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[avg:Happiness Score:qk]</rows>
        <cols>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</cols>
      </table>
      <simple-id uuid='{17C710E5-EA0B-4AFD-8BD8-F1A64F32FE79}' />
    </worksheet>
    <worksheet name='score by region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Happiness Score by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Score:qk]</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{353808E8-1712-49CF-9691-4B6A95B395F8}' />
    </worksheet>
    <worksheet name='top 10 '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Bahnschrift'>top 10 happy countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2016' name='federated.1xk6xgm1yg0ijx16elnow1qui1e4' />
          </datasources>
          <datasource-dependencies datasource='federated.1xk6xgm1yg0ijx16elnow1qui1e4'>
            <column aggregation='None' caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]' />
          <manual-sort column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Denmark&quot;)</bucket>
              <bucket>(&quot;Switzerland&quot;)</bucket>
              <bucket>(&quot;Iceland&quot;)</bucket>
              <bucket>(&quot;Norway&quot;)</bucket>
              <bucket>(&quot;Finland&quot;)</bucket>
              <bucket>(&quot;Netherlands&quot;)</bucket>
              <bucket>(&quot;New Zealand&quot;)</bucket>
              <bucket>(&quot;Australia&quot;)</bucket>
              <bucket>(&quot;Canada&quot;)</bucket>
              <bucket>(&quot;Sweden&quot;)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[io:Set 1:nk]'>
            <groupfilter function='member' level='[io:Set 1:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[io:Set 1:nk]</column>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]</column>
            <column>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' value='105' />
            <format attr='height' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]' value='104' />
            <format attr='height' field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Multiple Values]' />
              <lod column='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[sum:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]</rows>
        <cols>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BE7CEE4B-6167-4641-9975-363834CC100A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='9' param='vert' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='5556' id='10' type='title' w='99000' x='500' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92666' id='7' type='layout-basic' w='99000' x='500' y='6445'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='70444' id='4' name='country wise happiness' w='48313' x='1375' y='25667'>
          <zone-style>
            <format attr='border-color' value='#499894' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='13333' id='5' name='country wise happiness' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]' type='color' w='11000' x='37375' y='32444'>
          <zone-style>
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#898989' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='13000' id='11' type='text' w='98200' x='1100' y='7000'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Sitka Small' fontsize='24' underline='true'>World happiness</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#dfedeb' />
          </zone-style>
        </zone>
        <zone h='21444' id='15' param='horz' type='layout-flow' w='39875' x='54375' y='77000'>
          <zone-style>
            <format attr='border-color' value='#a0cbe8' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#666666' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='19889' id='16' type='text' w='38313' x='55000' y='77889'>
          <formatted-text>
            <run bold='true' fontcolor='#1b1b1b' fontsize='20'>Most happy country -</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#75a1c7' fontsize='15'>Denmark - 1</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontsize='20'>Least happy country-</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#75a1c7' fontsize='15'>Burundi-157</run>
            <run>Æ&#10;</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e9f3f2' />
          </zone-style>
        </zone>
        <zone h='13667' id='19' is-centered='0' is-scaled='1' param='C:/Users/Aarushi/Downloads/images.jpeg' type='bitmap' w='14188' x='21688' y='6667' />
        <zone h='49556' id='38' name='bottom10' w='22375' x='75750' y='23556'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='50556' id='39' name='top 10 ' w='21063' x='53500' y='23111'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='40' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone h='5556' id='10' type='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='13667' id='19' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Aarushi/Downloads/images.jpeg' type='bitmap' w='14188' x='21688' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13000' id='11' type='text' w='98200' x='1100' y='7000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Sitka Small' fontsize='24' underline='true'>World happiness</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50556' id='39' is-fixed='true' name='top 10 ' w='21063' x='53500' y='23111'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49556' id='38' is-fixed='true' name='bottom10' w='22375' x='75750' y='23556'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70444' id='4' is-fixed='true' name='country wise happiness' w='48313' x='1375' y='25667'>
                  <zone-style>
                    <format attr='border-color' value='#499894' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13333' id='5' name='country wise happiness' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]' type='color' w='11000' x='37375' y='32444'>
                  <zone-style>
                    <format attr='border-color' value='#1b1b1b' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#898989' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='19889' id='16' type='text' w='38313' x='55000' y='77889'>
                  <formatted-text>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='20'>Most happy country -</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#75a1c7' fontsize='15'>Denmark - 1</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontsize='20'>Least happy country-</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#75a1c7' fontsize='15'>Burundi-157</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e9f3f2' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F7D69672-93FE-44F3-BE1A-B7D067124455}' />
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='1000' maxwidth='1500' minheight='1000' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='GDP' caption='choose the factor' datatype='real' name='[Freedom Parameter]' param-domain-type='list' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <aliases>
            <alias key='1.0' value='Trust' />
            <alias key='2.0' value='Generosity' />
            <alias key='3.0' value='GDP' />
            <alias key='4.0' value='family' />
          </aliases>
          <members>
            <member alias='Trust' value='1.0' />
            <member alias='Generosity' value='2.0' />
            <member alias='GDP' value='3.0' />
            <member alias='family' value='4.0' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='10' param='vert' type='layout-flow' w='98934' x='533' y='800'>
            <zone fixed-size='72' h='8000' id='11' is-fixed='true' type='title' w='98934' x='533' y='800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='90400' id='8' type='layout-basic' w='98934' x='533' y='8800'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='60889' id='3' name='gdp/generosity/family' w='42400' x='933' y='17222'>
          <zone-style>
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#79ff8f' />
          </zone-style>
        </zone>
        <zone h='11000' id='5' name='gdp/generosity/family' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]' type='color' w='10733' x='31400' y='58556'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='14111' id='6' mode='list' param='[Parameters].[Freedom Parameter]' type='paramctrl' w='10067' x='1867' y='80111'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='40000' id='12' name='score by region' w='53600' x='44933' y='11222'>
          <zone-style>
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#f5eddc' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7778' id='15' type='text' w='30067' x='4400' y='9556'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a14f' fontname='Bahnschrift Condensed' fontsize='20'>Will Money buy you Happiness?</run>
          </formatted-text>
        </zone>
        <zone h='13333' id='16' type='text' w='28467' x='13200' y='80333'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Bahnschrift Condensed' fontsize='16'>R square value is highest between gdp and happiness. This means money can buy happiness</run>
          </formatted-text>
        </zone>
        <zone h='42000' id='26' name='freedom' w='50067' x='45733' y='54300'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#dfedeb' />
          </zone-style>
        </zone>
        <zone h='8800' id='27' name='freedom' pane-specification-id='4' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' type='color' w='9333' x='90533' y='88800'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='38' param='vert' type='layout-flow' w='98934' x='533' y='800'>
                <zone fixed-size='72' h='8000' id='11' type='title' w='98934' x='533' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7778' id='15' type='text' w='30067' x='4400' y='9556'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#59a14f' fontname='Bahnschrift Condensed' fontsize='20'>Will Money buy you Happiness?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40000' id='12' is-fixed='true' name='score by region' w='53600' x='44933' y='11222'>
                  <zone-style>
                    <format attr='border-color' value='#b07aa1' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60889' id='3' is-fixed='true' name='gdp/generosity/family' w='42400' x='933' y='17222'>
                  <zone-style>
                    <format attr='border-color' value='#59a14f' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#79ff8f' />
                  </zone-style>
                </zone>
                <zone h='11000' id='5' name='gdp/generosity/family' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]' type='color' w='10733' x='31400' y='58556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='26' is-fixed='true' name='freedom' w='50067' x='45733' y='54300'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone h='8800' id='27' name='freedom' pane-specification-id='4' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' type='color' w='9333' x='90533' y='88800'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='14111' id='6' mode='list' param='[Parameters].[Freedom Parameter]' type='paramctrl' w='10067' x='1867' y='80111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='13333' id='16' type='text' w='28467' x='13200' y='80333'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Bahnschrift Condensed' fontsize='16'>R square value is highest between gdp and happiness. This means money can buy happiness</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{645DA4E2-431F-4525-8046-533295D1F7AC}' />
    </dashboard>
    <dashboard name='Dashboard 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff'>Comparison of happiness Score with past year</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='2015+2016' name='federated.0hj5cyp1fb6mrs1c4hb491oq848e' />
      </datasources>
      <datasource-dependencies datasource='federated.0hj5cyp1fb6mrs1c4hb491oq848e'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='10' param='horz' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='17' type='layout-basic' w='99000' x='500' y='889'>
              <zone h='98222' id='5' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='72' h='8889' id='7' is-fixed='true' type='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#ff5e5e' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#000000' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='71222' id='18' name='increase or decrease' w='37813' x='2500' y='14000'>
          <zone-style>
            <format attr='border-color' value='#e15759' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ff5e5e' />
          </zone-style>
        </zone>
        <zone h='37778' id='19' mode='radiolist' name='increase or decrease' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]' type='filter' w='10000' x='41125' y='14333'>
          <zone-style>
            <format attr='border-color' value='#e15759' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='13667' id='20' name='increase or decrease' pane-specification-id='0' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]' type='color' w='10250' x='41000' y='54111'>
          <zone-style>
            <format attr='border-color' value='#e15759' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='44444' id='27' name='box plot' w='41875' x='54500' y='52000'>
          <zone-style>
            <format attr='border-color' value='#ff5e5e' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ff5e5e' />
          </zone-style>
        </zone>
        <zone h='37222' id='47' name='a/b' w='34500' x='54125' y='12444'>
          <zone-style>
            <format attr='border-color' value='#ff5e5e' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ff5e5e' />
          </zone-style>
        </zone>
        <zone h='7111' id='48' name='a/b' pane-specification-id='2' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]' type='color' w='8750' x='90125' y='14111'>
          <zone-style>
            <format attr='border-color' value='#ff5e5e' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='22000' id='49' type='text' w='9125' x='89375' y='26444'>
          <formatted-text>
            <run fontcolor='#ffffff' fontsize='12'>we can see 2015 year has more satisfied countries.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontcolor='#ffffff'>Comparison of happiness Score with past year</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='50' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='72' h='8889' id='7' type='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff5e5e' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37222' id='47' is-fixed='true' name='a/b' w='34500' x='54125' y='12444'>
                  <zone-style>
                    <format attr='border-color' value='#ff5e5e' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff5e5e' />
                  </zone-style>
                </zone>
                <zone h='7111' id='48' name='a/b' pane-specification-id='2' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]' type='color' w='8750' x='90125' y='14111'>
                  <zone-style>
                    <format attr='border-color' value='#ff5e5e' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='37778' id='19' mode='dropdown' name='increase or decrease' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]' type='filter' w='10000' x='41125' y='14333'>
                  <zone-style>
                    <format attr='border-color' value='#e15759' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='71222' id='18' is-fixed='true' name='increase or decrease' w='37813' x='2500' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#e15759' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff5e5e' />
                  </zone-style>
                </zone>
                <zone h='13667' id='20' name='increase or decrease' pane-specification-id='0' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]' type='color' w='10250' x='41000' y='54111'>
                  <zone-style>
                    <format attr='border-color' value='#e15759' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='22000' id='49' type='text' w='9125' x='89375' y='26444'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontsize='12'>we can see 2015 year has more satisfied countries.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44444' id='27' is-fixed='true' name='box plot' w='41875' x='54500' y='52000'>
                  <zone-style>
                    <format attr='border-color' value='#ff5e5e' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ff5e5e' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F1441FA-597E-461B-97A0-47777051D98D}' />
    </dashboard>
    <dashboard name='Dashboard 6'>
      <style />
      <size maxheight='1800' maxwidth='1600' minheight='1800' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='99112' id='3' param='vert' type='layout-flow' w='99000' x='500' y='444'>
            <zone h='2777' id='5' type='title' w='99000' x='500' y='444'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='96335' id='4' type='layout-basic' w='99000' x='500' y='3221'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19500' id='6' name='cluster' w='59938' x='1438' y='5278'>
          <zone-style>
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='background-color' value='#f5ead7' />
          </zone-style>
        </zone>
        <zone h='4722' id='7' name='cluster' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:AdhocCluster:1:ok]' type='color' w='8750' x='62500' y='5611'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='23389' id='8' name='countries wise measure' w='56000' x='25500' y='26833'>
          <zone-style>
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='background-color' value='#79ff8f' />
          </zone-style>
        </zone>
        <zone h='23111' id='9' name='countries wise measure' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' type='color' w='15500' x='82750' y='26833'>
          <zone-style>
            <format attr='border-color' value='#79ff8f' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='18944' id='16' type='text' w='19188' x='4563' y='30444'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Bahnschrift' fontsize='16'>we observe that color bar of  economy ,health,family   is more in satified country than any other groups. </run>
          </formatted-text>
        </zone>
        <zone h='5667' id='17' type='text' w='33313' x='62063' y='12833'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Bahnschrift' fontsize='18'>In sub saharan africa , there is no country whhich belong to cluster 1, i.e there are not many happy countries</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='99112' id='18' param='vert' type='layout-flow' w='99000' x='500' y='444'>
                <zone h='2777' id='5' type='title' w='99000' x='500' y='444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='19500' id='6' is-fixed='true' name='cluster' w='59938' x='1438' y='5278'>
                  <zone-style>
                    <format attr='border-color' value='#b07aa1' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='4722' id='7' name='cluster' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:AdhocCluster:1:ok]' type='color' w='8750' x='62500' y='5611'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='5667' id='17' type='text' w='33313' x='62063' y='12833'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Bahnschrift' fontsize='18'>In sub saharan africa , there is no country whhich belong to cluster 1, i.e there are not many happy countries</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23389' id='8' is-fixed='true' name='countries wise measure' w='56000' x='25500' y='26833'>
                  <zone-style>
                    <format attr='border-color' value='#59a14f' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#79ff8f' />
                  </zone-style>
                </zone>
                <zone h='23111' id='9' name='countries wise measure' pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' type='color' w='15500' x='82750' y='26833'>
                  <zone-style>
                    <format attr='border-color' value='#79ff8f' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='18944' id='16' type='text' w='19188' x='4563' y='30444'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Bahnschrift' fontsize='16'>we observe that color bar of  economy ,health,family   is more in satified country than any other groups. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{07580712-CA2B-4659-8113-E1B61BEC12A3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='country wise happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Multiple Values]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC17B382-6BA6-4D19-A1BD-E54E4953BB0B}' />
    </window>
    <window class='worksheet' name='countries wise measure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB100755-C802-4E85-828F-22A8F301C511}' />
    </window>
    <window class='worksheet' name='top 10 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 1]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 3]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[io:Set 1:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[io:Set 2:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Happiness Rank:qk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AAAFB247-A92F-4C59-AF5A-C81E6A0EE24C}' />
    </window>
    <window class='worksheet' name='bottom10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5C4668D-228D-4BC1-B893-9BC65FFE10D2}' />
    </window>
    <window class='worksheet' name='freedom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[Set 2]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[avg:Happiness Score:qk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[io:Set 2:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64F1FBC5-64A1-417C-BE19-5E0C8D2A4871}' />
    </window>
    <window class='worksheet' name='cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4DFA4A2-E24D-4F42-BA78-B657DE234FE6}' />
    </window>
    <window class='worksheet' name='box plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Exclusions (Happiness Score,Table Name)]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Happiness Score:qk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A359D76-D6F5-4FCC-9026-DD6D4C6D108C}' />
    </window>
    <window class='worksheet' name='a/b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{755D921D-8BC6-4830-86B8-1A9607180C18}' />
    </window>
    <window class='worksheet' name='score by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C680FDF9-0011-4BA2-ADCC-8FA98170B44B}' />
    </window>
    <window class='worksheet' name='gdp/generosity/family'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Freedom Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_779685710810013697:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Country:nk]</field>
            <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{902E3DCE-C98F-4841-B4FD-EA0BF9DA72CB}' />
    </window>
    <window class='worksheet' name='increase or decrease'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Country:nk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Table Name:nk]</field>
            <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48E4658F-A01D-48B6-9333-2EF7EDBB94C4}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='bottom10' />
        <viewpoint name='country wise happiness'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[usr:Calculation_219269033323868160:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 ' />
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{58C87D4D-2A9D-4E05-AE72-22945973A7EE}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='freedom' />
        <viewpoint name='gdp/generosity/family'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='score by region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{442CEF64-CCA7-4009-88E7-B27DE7E17174}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='a/b'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[Country (group) 1]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='box plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='increase or decrease'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0hj5cyp1fb6mrs1c4hb491oq848e].[usr:Calculation_219269033385373698:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0E55EC82-BC85-4AAA-B5A3-8BCFD3D1E983}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='cluster'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='countries wise measure'>
          <highlight field='[federated.1xk6xgm1yg0ijx16elnow1qui1e4].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{14B35841-3284-4F07-87D4-EE482D6BAB1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='a/b' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='bottom10' width='192'>
      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
      siwTCAT4H7ANk6TAS738AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='box plot' width='192'>
      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
      isnQ0z3rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cluster' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='countries wise measure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='country wise happiness' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3Nd2Xnv+Vs7nYwTkDMIEMw5NLvZUa0OSlawJFsOsq/H907dO1M1Mx/A
      L1w1H2BejOyya65l3+sZSy1LltqtbnUQOwembmYCBIic88lhpzUvDs4hAAIgQIJNtq//VSiC
      G3uvvVd4nvXkJVKplNR1na2G67pc7u4mnc8xMTuLNxLhq0eOomkaiUSC8ze6aa+tZVtr27Ln
      pqanebfrGt849giBQGDddziOg2VZaJqGpmlc7e3lemKep1vbqYzF+OWptxA1NSjJFLplkdE1
      lICf/MAQ3rpapJTUeX08dew4QohlbUspy78LIXBdt/xTKBS2bJw+T6iqit/vf9CfAYBpmuVx
      FEIQDAZvu8eyLO7H2lwKTdd1PB7Pljd8paeHD2anELqGY2gcVTV8Ph+TU1NEIxG+8vgTKIpy
      23NNjY2o167QffMmJx95ZNW2XddlbGyMdCbD7l27ytcVx2Gb1099bS0Do6PYls1MIo7iMUAT
      oCi4mTTCozM9OEgsHOGpbzyFx+O5jQCgSAT5fB7HcTBNs0wUq333FwGu65LP5/F4PHi93gf6
      LaWFbVkWiqKsugYNw1h1XrYSIp/Py60mgGw2y9+99zam3weAdF0OKgaPHTvG+MQE29vby4tI
      Ssns3BxVlZXlzkopsWwbYw3qf/+DDzg/PYk34KczFObEgYNUhEIAWLbNpRs3eH98GLliAEsL
      WAiBdByYj1OF4OvPfImqysrb3iOlJJlM4jjO1g3OA4Su69i2jWEYd9xdPw9IKUmn0yiK8sC+
      Z8tZmWma/PydU5h+H04ujzsyjqKqCJ+XodFRzt3swXXd8v2ZbIa/f/UVMplM+ZqUkonJifLv
      H507y7vvv8/FS5eIJxKEw2FsATmflyuOyanzZ5mYnOTqjW7+9mcv8falz8jMzhVFF9sGwCmY
      OIUCqb4BXMtGqCqiKsZUwMvU3NyqfRFCEAqFCAQCaJq21UP1ucIwDILBIOFw+IFz/xKEEOi6
      ft/FnPWwpbNqmibvnz/HtM+DIgTebA4lGKAyW2D3jj1cuNnDs0eOlReT4zi8eeY0bjSCZVnl
      dmZnZ3np7GmeT6WorAgzODzMqK7idF3HuH6Vbx8/wQ6Pn95CAcXj4fLQEH2FPPm5eaL5ArgO
      Zj6Pmy8gXRdvZQx3dBzp8+I1DCKZLAm/D9e2aZcKuzo61uyToijouo5pmls5VJ87fD7fg/6E
      VXE/xO/NYEsJ4N3PPuVyIYu0bLLjk7TEKjnc2YlH03nz4w+ZVBXMK5eor6zmkf37cRyHhGmi
      h4JcG+jniehRAKqrq/Fm87x3+RK1/gA5IWByGqOzHSeXJxqL8bXnn+env34FQ6gYjU0MaALF
      6yGtaRxpbGJ/5w5M08R2HPonJ9h28AgNdXXkCwXiiQS/On+WfTW1PL+GLrIUJSUYioqkoihI
      KdE0DSFEWRlfqjg/bMjn8wgh8Pl8912u3gwe9Leof/EXf/GXW7W9v/POuyhAqq+fyro6nt23
      n8vd3Xg0jS7bRDF0ErrGUDKBJ5ejub6B2lAFl4YGcTJZdASX+/toq29gbGqSvt5efJrOrEfH
      TqVQY1EQgl2xSrweDx5F5eCOnexu7+DCzV6yiQQViRTf/MpXiUWjhMNhopEI7U3NxKJRdF3H
      6/GgKAqP7t5DIh4n6PffkTsKIcoKmc/nQ9M0vF4vhmGg6zqGYaBpGlLKZeLdwwTHcZBSrqnw
      /4+KLSWAtuZmDnfuwM3lOdy5g7MDfVQEg6TTGYaHB3EdFyMUQtE0bnR1c2BbO9NzcwwnFpjJ
      Zrh05TJzQR+Nqk5bQwPTM9OMp5MYsSgiFETz+XDzeTqjMVzHIRAIMDg6yraWFlJz80y7Nk5l
      jML8Au1NzeWJdhyHa709XOvv43zvDeYWFuhsbWVsYoKWpqYNyfcleVVRFBRFuW0RqaqKpmll
      U+nDCCklhmF8Ya1Y9wNbbgUqiQG5XI7Xz57m8b37eOnVV0laJp6WJqQQqIaBdFyaXUkkGGJi
      dpa5igDScZCmxZ8eOU4wFGJ8coJzN3tx0xlu3LhBxYljWPEEgZk5goEgojJKQyTKCyce5a0z
      p7lq5ooWpN4+mmrrMHSdPa1tfHyzh4SuoixyeiebxZvK8KcvfpVwOLxlfS/1f2FhYUvb3CpI
      KfFvYMf7HwlbbtoocUa/3893nv4S13t7yNdW4dV1nIJJ5kYvgZ3bUXSdwYKJ7tGRFQGEEAhN
      Q8vmiKdT/PyTj/jzr36d7dvaWYjHGUzEUVQVNV9g344djC0sMO0xmEvF2TEyzM3ZGagIFjl1
      xzamFr+nv+sqajCI6r1F5FoggGkYnOvu4rkTj271EKCq6kNpOvV4PEgpKRQKD1z5fFhwX/dC
      IQQ7trXzzY6dhGYXCGeyPPPII7S7CrHZBdRFZdJIpXHmF3ASSfbX1uP1eqmPRFEWiSkSDlMT
      i6EtxKn2+Th08CDjmTRCVRCGQTKVpjlUceu9qlr+Maoqly3+EpyFOLVLntnKPj8sZsaVMAwD
      r9eLZVkPJYE+CNwXR9hqkFJiWRa/PX+O68kFhM+Hm0pzpLqWx/YfQEqJ47qEgkUuLqVc1YmV
      TqcJBoOc/fRTzo4MUQhX8GSsGlURvHbhM3yN9Zhz87imRaC1GQDHNFE0jezwCP6WZoSi4ExO
      8/XDR9nT2Xlf+mqa5jLfxsOCaDT670rwEmyJCOQ4Dul0mqm5WQamp9nd0kJLQ+Oye0qDPptJ
      40pJKJvjmT372LWtfdUJWXmtRBRSSrpu3GBn53YMXcfweWlvacXQdaojUXrGxwjV1NM1MEBi
      fgE3m8OTKxCsq+HIjt2MJOIYhk5b5877svhX+/YHjRLzkFKSyWQIBAIP3TcCtzG9zwNbsgN8
      fP48H06OIbweFF1HL5jsCoSoDkeYy6Q5eeAg/kXFy7IsFuJxYtHopr2r+Xwey7IILtklLMsi
      nkhQVVlZts+X4DhO2WKzcje53wPtOA6JROK+vmOzKAXDPUjP63r4whLAzb4+ftl3A3WF7Jub
      msZbU02N7fKDp56564F3XZeR0VEmFuY5fekSP3jhRerq6jh17iznRofRfD4aVA2/x0t9IMjx
      w4fLpj7TNNF1/XMfWCklqVQKezEU40GgxAxUVUXXdXw+37+bQFdgS0SgUDBI0HLIrdD9fLU1
      AExrCq+e+YRvnlzb65pKpbAdh3cvXSQcCPDMkaPle9/84APOjw7jZjLo0QivX/iU33/mWS51
      d6E11qNoGhNSgrSJSRdFUYgnEvz2wqcMxOP4gT978avMzs1xob+P1qpqBicn6GxqxnFd2pua
      Vg3HvRc8DF5hj8dT3jVN00RRlH83ga7AlhBAKpMhqcB6/H1wYYGRsTFqa2rwrrLjjI2PM5tI
      MGAVsKaT7Jubo6a6Gsuy6BofRfF68Dc34lo2UbuoZFqRMJqqAkW5W0kkefSxJykUCvzi7GkS
      Hh0lFGR/JMbbZ05zeXICT30tvVcvY+kaN6UDAnx9PfzpM18muIURiUIIVFXFsqwHJm+XrFH5
      fB6fz/fQij4PEluyH/ZMTqCvsXik4xDJ5KhC8PMrF/n40sWyMrv054PrVzk/PIg7MYnHcYmE
      w8Vw5FSK7z35NHJ+ASkloXyeSCDA/MICOM6yEOqDtfUYhsG5q1eIa8WuhS2bxMwMZ7u7MKqL
      IdcyFMSfSKFoGoqmkQ8GOHX+3JZy7ZLn+EFBSkk8HgeKlp9gMPiFj2i9H7hnArBtm+k1PJ8y
      X6AhZ5JwHKYqAhDwMzEzzY9e/iW/PXeGmwMD/M3Pfko8kUD1+XBrqrBCAfaFIhiGwfjkJP/P
      O7+lYBYQqgpSMpdI8smli0zPziC8HqxkChlPQDLFoR07AeifnUWoKlJKOiJR+hfm0YIB5GKI
      guL3EQ6HcZNJonkTMTHJ5NzcfQlhMAxjy9vcCFRVxTAM8vk8uVzugXzDFwH3TAD5fJ4Fbl84
      0nXZY3iZUQWEQ8WIymyOyUSCQkWQi4k4PX03MQ2Df3j9NSIeb9EpFolQuZicEq6oIBwI8svr
      VzHaWhCKgrepAae6Et3jpUbVkY7Dt/Yf5E8ee4JoJEIikWDGupWyqGkaSjCIv7EBtSR6SYmu
      6/zB0UforK7BCYVQdZ1Pr17ZUiJwHIdcLvdA9IFS3A88fGbZhwn3TAAXe3twA8vzTKXr4osn
      2dbQSGFJnL8a8COaGlA0DaGpXMmkcCqjFLweYiXlTAiG4/MABAMBXty9F78rEUuUZz0SwdB1
      KnQd3TCIhCNUV1UBMDM3h2voi00Jbo6NEc5ksdPp8vO5mVmmhob5m//3H3njrbcopNIkQn7e
      GRlkaHj4XoekjFIE6YMIjpNS4jgOoVDo30WfdXDPBJDJZMC0ll1zMll+/8mnuTg6jBJa3bqi
      qCpGLAqAFgoyMz2Nk84ghGB+Cddsb23lz1/4CqFCMSHFtW2kbWFbFk4mS13BpjIaLbebNc2i
      uLQI23VZ8Puws7fEACMYIO3z4G1vw3QdNL8PhEDxenn9s/PLknPuFUKIB2Z6zOfz5PP5ByaG
      fRFwzzPzwuNP8J1de9By+VsXTZNwOEw2ncGZK+oHdnZtUUDRdeYcB2VRaZyTDmMTE+W/e71e
      fufQUZx0GnNohAYpqKmqYsSxGUsnWVhU9gA8K7hdyuehRlHxLjFzqn4/gY5teKurqDx8sBhT
      JAROLs/syCi/euUVTp87RzabvaexKYVG36/CA3dCKSRjKwn63xrumQCEELS3tLI/VoW0bVqk
      4MXd+9A0jR88/wItmk50dp7c6Ni67WRiYZRS0JphMLdCsa6rqaFV0fnSkaP84IWvcLG7G0u6
      aC1NvPbpubKY4fF40HJ57Gy2qPT6fcxpyjIxoOQZFkKg+Xzoiwn1QlXJ2jafnD/HWzdv8NMP
      3rsnR5aqqgSDQQKBwOe+Cyz1ij8oPWSrULIU3g9smXB4bPce9J4eTh46VJ5sx3FIGTpxj06o
      Krbu88tCFWz7Npu8EILvv/iVYruuS09iHi0aAWAmn6NQKODz+YpJOSPDZHN5PusfwNuxrVyd
      4k5QfV6i+/aQGRlFDwYYvH6d05XVnDxy5K4WsKIo+P1+bNvG6/WWy6x8HijZ/TOZDLZt31WY
      wYMITVj5/kuXLzM4NEQwFCIWjTIZX+C5x59Ys2LIZnFXBJDP58vu9RJCwSBPHDmy7D6f10tI
      05lNJ3EsE8VxCXs8JAWo63gkVY+HU13XyKRSHNi/n3QmQzKZpKG+Higq2R4EJQHFVlWGx8bY
      uX07AAVF4Zpw8HZs29QEKqqK4lMJ79jOwrUu1FCID8+dpXd4kCePHmP7iiJeG0Fp0WtasS5S
      KX/4fmOlH8J13U0T8YNa/FJKLl+5wqVrV7Fsh/F8lsr5Obwz00wn4ozMz3Fyz1727dx1z9+4
      6ZRI27ZZiMd57e1T7Nmxc9XQ5RIURWFHcwsRy2Z7OMre+kY6a+po0Ay6r1xBjUbW7EBB17gx
      OkIABb9hkIjHqVq09ABc6ruJuSgyCV1jbHSUnY1NGLpOfWUlAz29JGdnsU0TbbEammtZSNct
      K8mFoREUxwGPsczKBOCtqmSh6wbeba0UggGmBofY0dqyaYXScRwcxyGfz2PbNq7r3ndxpMT9
      NU3D4/FgGAaqqj705lDLsshmsySTSc6dP8/1vpvkq2JEvF5Shk7e0LGROFUxbkxOoKbTNK+I
      Ot4sNrzyc7kcr3/8EZrjsLOjgwHbpLevj5amJn7285/zJ3/8x8DtXMN1HLpnphkz87i6Bgjc
      bBatqQHWmRAhBHpljN+ODBC9eoU/+93vArds66xYiJl4nGQigd/nI+D38wfPPc9Hn3zCdCrJ
      1MgYbsCPQJBOxFEKFjUtTdjVlezTfXQvLOBULo+TF4pCeHsHeiBAqqeXvCv55ccf8YfPPoe6
      xMp0J5RKAPr9fkzTLCei3M/FWHJ+aZpWTtp/2IPgHMfhb//+xwgpyWSyLLgOut+Pr66W1NgE
      em0NZiKBq2mkb/azr2M7+3ftJpfL4fV673o8tRv9/USCAQKBIOGKirKymMlkmJyaoqG+notX
      rnBxZor4/DwRr5eu8+cw6mq4Nj6GxzAYSSeZnZ3l9fNnUQ0PT+3ZS9OiuKIoCrOFPCIURF38
      xtUytFbCtSys+QWC6SyeYKi807zy/nsEgEeaW3ij+zoiFEJoKrubW7jZ10dDQwNQtBw9+8wz
      SCn5xRtvMGebeHJ5jILFyROP0nOzF69tE95WQ3MmQ8/CAp7Ycj3FX1+LlckWic3vZ35qilwu
      t+nAOdd1yWazBAIBHMe5736B0g5j2zaapm2KYB8EXNelu6eHsbk5hOvibainIhrBCIcRioKn
      qYH06Bjeqkoc08TJF7j86WewECfZ28uxp59m/8mTd0UE6vFvfuMvPxkb4fzNHqo0g+rKSlzX
      5ecvv8zZoQGuXb7CgAaW34crBG4sihIsKqgLlslQTw9mwE8+nWZYgbSu0j0+RmEhTtDrJRQM
      UeXxcmN4CDOfR9oOyhpihJZKI20bDB0UhdzQCNvqGzm0ezc11dVks1l+9dGHTGsql9/7gGcP
      HMRaiJOSDrOuTVdXFzNDw7S1tpZDoIUQXB4eZN7nIevzkJ2aoa22jl07dvDYseOcPneOXXt2
      k5maJq+rsGKxKJqKnc2Sn5kFVWVbfQOxSGTDA1wql6KqalkRtm37cxFHgsHgQ18GJR6Pc+bC
      BX7+6q8RqooarsBTXYknEgGl+N2u7WBls3ijUVTDIDsxya75BXYNDFGfy9OdSmEqCpph4Fks
      e7NRqN/64R//ZV5TMMJhemamkak0qYUFPuzrxdvWgh2pQCwuWHWFLVuoKlYoiBoMMK8UF4sQ
      AqlpjJsFrgwP4qTS1EZj+C2H5/YfIGg5jFiFZZPi2jZqMsWJ5jYirsvs7CyOoiB8PrLJJCf2
      H+Ctt0/x4fXr0FCL5vfh1XW+9uRTXOnpIR8MoHq9aMEgFfkCHw32U+HxUL3I0SeHhxnP51A9
      HpRIGI/j8Oihw1zr6UHXdVobGsjm88xPT2MZOsoKk6nm95OfnOJASyutzc3lOqQbQUkZLfkB
      SmLQ/V6UwWDwgeRBbBRSSrq6unjr3XeZmZkhHwoQ3rUToWlkJqeQjoMRChVrLZkm0nXR/X4c
      06Ly8lVeyJv4hcAvBPl4nMj1LuKnzzB+/TrGtjb8G9yll+kAqt/HmcQcbi5fTCoXAsndxbYL
      IZA+H2cS83w8NY50HK4l5tmme3ELeSQSK5ki7Pezp7Ye4Q/RPTPFTCHP8epamltaSGbSjI2O
      EfD72bt3H8e9Xj64dJGhTAbN76N/cICW6hrmEvMQCaMH/KSmZ8mHK3mz6xodTc1omsbQ7Cwi
      Eip9GInF4LDWhgZCPh91tbVc7+9jX30jH9/owtfZsVwpdhysTAZNyk1x/6Uo+RPud4LMw571
      VcL0zAz/+NJLOLpGMBhErasBReBaFv66Wpx8ntTIKEiJ6zhUtLYA4ObzHMmbsGR+Oku7tuvC
      2DgTf/XX5P/oD2laUjkcirrR6MgIjY2NGB4PqqoWd4Asssz1hKKgGAaexSpsa2FlmmHp2mr3
      KbqOYhhkEwmaolGONTTREQqzt76BJ/cdwMnneevKZaxsFlkRYrT3Jo8cOMD2bdvo7OhA1/Wi
      HCslZy5dREdwqKqWR48/Qs/EOLParUJVTjYL0Qi52TnaKyuZmJricmIBdTFeKX/9Bj948SsE
      /H6mZ2bI5XJUVVaSSKWZji9QpRukUykcr6dMBIqu4W9soPfqNfLxOO3btm06viaVSpFKpZBS
      3heF1OPxEAgE8Pl8D73Mn81mef/DD8kW8uhCkLNtHNctFzP219bgFAooukawoR7vEmuhk8vR
      OTRKcJ216bVt5ru7yQSDRBsays+qqkrf+fNM/te/Y6J/gJqDB28RwNL4mfVMm0vvWQ+lNkpw
      LYtHo9W0NzURi8Wor6tjbn6eTz77DDOTIbOwQCEUQg0FIRLmZl8fc3NztNTWkclmSaZSJJNJ
      zo+NolRVkhyf4PrwMIOuVQ6hAHBDQYSi0FkRoTFaya8/eB9ZFSv3z+P18vjuPWiaRigUoqqy
      kvHJCf715g1ms1my8TjbqmuYy2YQS1I8FVXF31BHz6XLfHrmDB7doKlxYyY413XJZDLLyrNv
      hWji9/vLPyVLz8Mq8izFe++/z9HDh0mnUvSNjOBpakAPBPDX1WJUVBTFxkCAwkIczedHqLcY
      huL10GdodEzPoq/TV59lY13v4lJvL3X795XFwaRpUnnxEsb8AtPhikURaIWEs7SKwFrYjJew
      tAucSS7w6WcTeHWdvO0UuaxXZ2pykoJloVVGEYqCaijkYxGumTlunHoTR0ocQ0fJFwg01iM0
      jWAgQByJslIvWfym0XSKZyuKBOUuIRAnGODDy5d47pETZU48MTNbzGcumHz/xa8UOeiNbnrd
      5dlcQlGoPHyA1NAIp2504ff72b9v3x37b9v2sjo8W+Fh9fl8D72Cuxa+9MwzOI7DwNgovuYm
      fFVVGKHg7etNCKR0V1wSqNvauDY0yvH0+rFaXilp7x/g4k9+yqN/9h8QQmDNzZEwDIzv/S4d
      u3YVY4HkSgrYIDarGyg+LzIWJRcKIqNhFJ8X4fWQDoeYT6WwloQsQ1HJdoIBCAVRPR5EuKLM
      7cfNApnk2lUXrICff3j1VXL+FYnKimAiEV92qb25mVYXnu/cRX1dHTXV1VQFgrBK/1Svl8jO
      TjKJBK+88XpxK79D0JyzInNtK/BFXfxQNI1/fPoTplMphMdAXaxYtxKa14u7itfcnJ2jI1Ws
      uZSQLusFl6hCoI6MYC2Wty/MzYGqEqmuxuf335/KcKUCsiXcadKNigoc18XObezsLSEEen0t
      RtPaIogQArepHm0xpig/O4eTLyBSaZ7evXfZvZWxGN995lkO7Sq61jPZLB+PDiFWiBSubePa
      RU4e2b2TrN/HK2+9yT+//vq6tv1SXkApNPpeiaBUpPeLiu4bN/hwcIDakyeAovVwNRjhMIVk
      6rbrkfFJYovzogmFq7U1zGjqmmxcOk5Zn9v7/PNY+TyjP32Jc//tv29dMNzSCYai3Lsa11tt
      +xeqQuzAvvJpLlsF6brUpDLYQmEknsCbzvLdZ5+leR3ZPZfL8csznyDCFeX+lMIX5s6cxxOu
      wN/eBopCdPdOsuEKZqcm191Dly78e138mz3obmx8nJGxMU4cO3abXvbbjz+mtbaWqsoYsej6
      wYpbBdu2+dWvX0Ht7CA3N4+vMramscUxC+irlJlMtDQxOzRClVAIAPUzM2h/8APmJyYxz5wl
      lMkQkBKEIKOq1H7vu4x3d5OYnMLf3ITXdQlNTcPUdJEABPe2lZYWdIkLKoqCupiTu9HYFz24
      NRUZrFQKVTdQFq04SSl5pKEee3aO9qZmmuob1hUduvr7mUKiCKWcVQVgZTJUNtTz9ROP8dpH
      H5DRNPxNDeTn5vne8y+U65iuhhIzuFeRpXS210bbyeVy/OqtN5kt5HGQaKpGppDnxsAAkapK
      JhybzybH+PreA58bAfT29pJ0Xfz5PHYuhye6ulnZdRwUVaWQyd52jx4J01MRompRDGpwJdO/
      epmW//k/EX72WeamJpk6cxahKFQdOUx6YgLn1d8QMU2GDYPWJeO3uI/eG1cqcbaVO8CDqJXv
      WjYttosTT+DaNtWazjtXr9DW2lo+kXAlTNMsf2dHczPa/Pxt9yi6jr0Qp7Wlhcf3H0R4DFL9
      g4Qdl8aGxnUXpaZpGIax6QM0SgdzeDwe/H5/uSLeRvHeRx8yMTcLus6NwSEujAzx6fwMcb+X
      cY8OAT9aZYz3u68zPTu74XbvBTf7+4ns34serihbfFZCSkmhu5dj/hBPd2zHl79dNM4tPcYW
      qMlk6b96FY/XQ0NrK4d/7/sc+t53Sfb1o/3yZSpMEwG0rjjqSoNby38tRW2jClxpmy9N8oNI
      wvDEokzk8njTBexUmvqduxlRoD8+z4vHHrk9WM91efndd5i1TPyqylQuhxKN3KYcKbqOva2V
      y1eucOzoUT69dJGE6/K//Zf/ZdU6R0shhMDv91MoFDY1JoZh4Pf773rnOHH0GI89coLfvPM2
      XVOThDq2oeo6SyVuoSjkIhVcun6d55966q7es1GYpsn49BRuNIxj2+hreGvt+QX+6OvfoK2l
      BcdxiL/3Ln1L/i4dl9p0BpZILmkpqWlro6/3JoauUdfYiK7rZMfGWM9vv6omtTRjapkZcJVr
      S1EK/V1N1r3Ts1sJx+fFrK2msrqagmODz0s6FuHl61e40HV9GRfuvnmTIUWSDfqZ0VXy2UxZ
      Jl1qVxdCYETCnLp6mddef50//+Gf8N0vfXnDiRlLDQMbIQJN0+5p8QO4UvLmO28zlssS2t6+
      zF+yFFY8QVNt7V2/ZyNwHIefvPQSswEfRiSMUyig+VYvI9/W0EhbSwtCCCamprgy0L9izCS5
      Fc6+kBAs9Pbi8XoY+fHf897f/A0D3d1YHe3E5dq77jICWK1g1VqK22YmZmll5/u9K5Tfk8nw
      lSPHSOZzZcKzPR5OjQ3TdbO3/B2xSAQjk8OemqYukaZBChKfXUIuim8rT4z3bm/n/NgIn332
      GTt37Nhc4FUpvGQDY1BiJPeCWDTK9775LZ7csYvC3O1inZQSJ5XmRH0ju3bsuKd33Qnjk5MM
      JxN4aqoXX772vZnFrDnXdTlzswff9uUVxBVNY6SxHnfF+Ji9NymkM0SfeQbv3DyF//pjPK+8
      SmAdHXfDVqCtTI+7H6l2pcViTc/SEY6wu3MXHsNgIZ9HeovBfNHZORKqyhufnieXy3Hs4CEq
      o1F+5+BhwhUVxBaD5/r7+/nF6Y+hpqp4nJOUSNctnncsBMHWFi5cvcrRo0c3nOxeEoM2mg22
      FdUkhBCYpklXby+6pi4bd9eyiLrw7ZNPEousnZh0r3Bdl4Jp8uq5MxAO4Zgmub/ejQsAACAA
      SURBVJlZVH31pSddlzrNKJ4l8fFHDDjmsuDEEjLVleSHRllqD2saG2f6//sn/N/6HTyNjQRu
      9BBw3XVDejZlBl25cDfKzdbSKbYS0nFIXe/m5MFDvPDEkwgh6O7vpzNWxfmJUaJeH7/31a8z
      PjXF+cF+jEXz2sDwEHPzC5iWVSaAbdu2cWJsjHcvfEbgYNHTa4xNEk+l8O/oQGgqPT03GBoa
      YscmOGcpNn8jivBW2fl1Xef3v/UthBD89txZBuMLSCF4Znsn29u23VF/uRdIKXnz1G+5cOUK
      WUCLRcnPzhFsqL8tAw/AyWTYHajgyPYdvH/6NFdy6XI230p4CyarsZLqfB73pz/Dt8E1tmk/
      wNJ4ls1iWeL7EmJar80Ne1CFILC9nZ0treVndrW3s6u9nfxHJsf27qVgmng9Hr7/1DPlYLZA
      IIjtStrb2pa988knnmDBtri+sIARjVCoitEoBKn+YTLhIMePHae5uXnTY+Dz+TZ0csxmbP3r
      QYhbRzZ97fEncF0Xx3Hue60gKSXdvb188MGHVDx6nKAi0Lxe0mPjty1+KSWFuXlO1jXyzMmT
      fHrhAqcnRsvVxVeD29bC647Dt6734F3KlCl6fzeKRa1sc51birshhNJi3giX24jeIF0X2TfA
      8w0ttLa03Pb3Fx5/nIDPx0sfvc/Ln54tH2otpSQaDmPmsqTSxUjNwcFBEskkQghefOwk0fk4
      VYk0itfLQk0l+/fv45t79uMxjE0vIiFEOWFjvT7dr0K2QohyzdD7CSkl7733Hv/wk39CaaxH
      83nRfL7F2J7b+y0tizoXnjxxoii2eT346mrvGI3sGPo9GvDvsirE3YowS72hSz2sJdytbmCN
      T/DlQ0c4fODAmvc4jkOlx8vTh4/g8/no6e/jYl8fRzt38NupcRgdJoaCCsRdm28fOkprUxP/
      +X/6c2zb5pNLF7kxNcmZoQF+79gJTj766F3vgoFAgFTqdhd/CQ9TKcOl87VRvPHWW7z76XkC
      HdsItjSX2wFQVO22eXbyBZ48eKjc70hFBcxMrvsOO5vlUPfNZaLORkXypdAQsFlH8L1YJ0qm
      xbU8xJslAtdx2FkR5djRo+ve5/P5+P5zL5Tbth2XuliMoN+PNE3UUIg4t/r20pmP+Ub6AHt2
      7ULTNJ48eozHXZfxyUlu9vbiDQRoXMw/3ixKsTxLw0WW4mErYrWZ+ZBS8ll3F56aavz1deVr
      t/7uFoMMl7Spmhb1iznkAG42h3TcZWHQy97hujRcuMKewnKn1ko/1EawLBTibihoo1haluNO
      4RErTY/rwZ/N8Y2vfG1D+QlLsXv7diTg2DYeR2KvuE+rruLy4ABVlZWEKyrKoktTQwNVsRj9
      Q4Prvu9O31LaBVb2VVXVhyrQbbO7XKFQwHVdNJ+XeHcP0X17lv3dW1VJbmYW/xL5PqDrBJYW
      QnPdcj7wSkgp0Xv7eGI+jqZpy8zFjuNsOhlIKQlR99tBVVK+SlXKtgJSSvbU1KHfhcgghEAR
      gp7eXnKWueo9Yz6Dv/v4fX7y8q+WVXPwer001tWv+sxGoet6+dR2XdfLY6Jp2hcizDmdTtPV
      1XXbddd1yaRS6BUVBNtu18dyM7N4IuFl1yzkMpHQVRXkKucYS9el0D/AiRt95WSYlfWONnv+
      sSIdh+z0DPGbfbj38fDk++EEc3J5djbfPsibwe5du6hZ48BsIQRGOExTSyt9AwMMDg0Bxb68
      furUPR02XbLO+Hw+QqFQmQge9lxeKPb/nbffXtWn4fP58Ksayd6bSPP2vxvBYDmkvASrIsRf
      v/YKvb29vPzKvzLQ1U389DlyU9M4hQKeTJa6ZIaT/hBfPXiEXGWM1B0ctRuFti1YQd4ymesb
      IDMxSbCxAcc0yc/N46+r3VJutDIxZKlIVNr+V2I9ccjN5crnAmwWg4ODtLYWTaZeZ22Z0bUs
      siJPZ0dH+VpPfz+9hSxDw8O0b9t2V++H5f0JhULlEy2/CDh8+DDhcPi260IIGmprGZFOufw9
      gJVMgYBCIkGouem2Z4z6Oi7c7OWJo8cAOHLkCJevXqWlqZmWxiZcx8Hn99Pf1UXW72MymSRo
      3zvD1h5/5BGe0XU+On+Oj0eGyc3MYqUzuIUCOVXFX3JdbxFKSspSRVhRlGVn+q737FIouk42
      m6WiYnUOvh6am5sRQjA9O8uomUcNrB6XohgGY5OTOI5TrvHT09+Hr76ed86fo7WlZUuS0BVF
      KdvrH0aU5Ot8Ps/5c+d49LHH1rRWef1+zIlb1cCl62ItLKB7vai6Xk40WjqfmdFxmjs6y4XN
      XNclFAhw4Wf/THJkhEDBJF9bw+z8PAdX2VnuFgoUB//JR07wR489jjs3T2FyCpkv4OYLmKtk
      5NwtVFUtF9UthQh7PJ7y75vdbRSvhw8uXuB6b+9dfQvAW2dPo0TCa26j0nUZGRnmF2+fwrIs
      +gYG6JqZRiiCSSG53nNj0+/+oqG0W6eSST47f75c7HctHDt+vGwBAjCSKb7/6OM0awZGOLyM
      YTiFAu70LIejlRw/frx8/dMPP+RnP/4xjT29tOQLVEpJWlWJbnF4/bLiuBWhEB2NTfQPDZKd
      m8PJ5SmkUvhqqh9KxUyoKrO4DI+PcWRbx11x4rDXR+/IMO5aBCgE/oZ6EtLl0unTXM+kEFWx
      4g5m2Uzc6OHYoUMP5fhsBUzT5Jf/+I/oXi9X/u8foY+McPi7v7vubhUOhViYmWU2l8UomPzu
      sRN0tLWRSWcYWJhD9XlvFV5wXA4EQnzthRfK9Uxd1+XcK7+mY89uprJZjGQSr1BI2xbClYQ3
      QAQbjTy+rTp0RShENp3hxkA/0nGwEylUvw+jYuPV0LYSG+mEJV1afAEiq8ika0HK4ukplbEY
      TaEKLo0MoxhryN9CFKvg+X0I361CrEJRSJsFspPTy3SEfyvI5XIMDQ3RNzBAanCI8Mws87t2
      YWgqmq7jW+NoXFVV2dHaRrM/yMldu6murKR/YIDG+nou9N1EWXKmnGuZHKipQ1FVPjp3lh3t
      xXGcXpjn8JNPkgHSXTdYcBysfAEbSeUWMptVDc5PnTxJJBwm5PNRX1eHlUovM0t9XnH9G4Xi
      8XCp6zqnzpzmem/vhh0h+Xye2dlZaqur0VdUpIDVdY6lUA0DIxrh5vDQAzkI737D5/MxOTFB
      RTjMza7r1CoK+69cxffTnzHd37/us6qq0tbcjK7rfPDxx/z01G+xLIvOquXxPQJIJBL0DA+x
      vaMDRVEY7e6m5e13ufHabxCpFG2aRoOmEVIVAu7WWhJXJQBd13nxmS+h6jqTMzNYs3Okhotl
      6pbG9n8e2Gi0abdwuZBL8+pQH//Xy//C5Rvry+b5fJ4zZ8/i8/lQFIVoYPkOdydHXdlu7/Mx
      Nj7OzMzMBnrzxUPnjh3U1tdjCoEjJTowGgnTdujQhp5/6+23+c377+HxefH6fJzcsxcyt8rI
      WKk0oWCQfR3b2bXI/ZmYQEhJ+Ow5ou99gCslHiGoUlSS7taa6tfMCDty8CD7tndiCKBg4uTz
      JAYGsT+nI342g2IxraIMr+g6xKK8OdTPpa7ra9rqLcvijbfeore3l0wmQ9rM37VdWQv4mZmZ
      eehCGLYC9fX1VFRUIAwPI65Lv+uy0NG+4XilDJLKE8dwdI2BoSEGhgYxMxmkZRNMpun0Bdm1
      axex6K3zGWYyWUZch3HHZsAyuWpZpBbj+pNSMmRbFLZorNfshaqqPPflLzM2McFYIo45NY1R
      VYWVyd5WJfphhPAYvDE8yLmhQb68dz9NdXXltEQhBD6fjx/+4R+yf/9+zl2+TC6w+SJJUhbP
      L44dOcTLH31IY2MjkfuYXPJ5Q0pZLCQgBHo0QiGboyOXx/n0Al3hMPu+9rU7tqErSvFknqkZ
      zrtXGY8voBkGXlXjP37rO6saLgKKoE5bLm72WRYFx+agbhB3HCYcu5jkrm3eb7J0ftY9IknX
      dRzb5vLVq0S8PvKWiTcWK56r+wWAomkUdI1r46Oc6brO1aEBpscn2NHWhqqqmKbJ6a7rfBaf
      Q3juLkRYCIFQFCzb5vwnn2Dl8oRDoS2L53+QuHT2LG/+3d+h9/Wz88kncfr6yToOYSAxN0ft
      yZN3tLxlFuJcuX4dYVoU0hm8msaffOObHNu5i/6BAWqqq5FSsjA/j8/vZ6Svj88+/JB8PI5X
      CIxFkXvUsWlRNQKKQlBRiCgqk45D1V1Y/jZMAFDcAjtaWnjuy1/mRlc3SnMjYo1ApYcVQtcR
      Pi+WrqOaNgc6OpBS8q8ffciQJmCNymR3bHeJM0cPBlBrqhnLZbj08WmO7t//UIU1bwa2bTM6
      NMTlDz4kMDZGc6HAUMEk8vhJtKpKgsMj+EyL0WyGmjvkRedyOYy3TlFXVUWsqYnm+npuXr5M
      c3s7ra2tTA4Nce3Hf0/q9Te5mkxw4f33qZuYxHJd0kgqFYUZ10EXguoVi33CdahR1TWDmdfa
      iZdev+MMLcTj/PK9d3l0126iwSBj8/MgJd679BBvOMNrnefvRdYuuE75xMSj7R28Nja0ZrWE
      9b5hte8QQqBoOk5NJZeuXOHwwYNfmNCGpZiamuKTH/2Ig0Ilo6gMupLjv/MNXCC0bx+fnT7D
      Dscl/fFphvfvZ1tn521tuK5LMpnE5/HgaBqH+gfpXYhTnc3SYJq8Pr9AnWXRMDtH46KeFjl9
      lh2ArWoIFQYcmyuWSUAIGtTbl+oOTeeCaXLIMJaJryvTduH2rMOyEeNOgxGNRAh4PBheD48+
      +ig//u//DREK4YnFEHfJOVd+5EYWdInLKIpyT4dMpDIZevr6iqZPVS2adze5SNdTlBVDh2CA
      U6NDjM3P8Z0XXrzrb31Q8Hg82H4/IlegVtPQpMTj9zMzMcnkpUtolgWKSgCYu3qNtu3bly2s
      j05/Qv/8PFy+Qsv8AvskOMCeeKmYsaBpcIgWTWOp4GmUIjwX/21CY951aFpc/CuZji0lfgET
      jk3jKgSyEdxR71NVlRefeIKbff3s2rmTP/vjH2Kl0+Tn5ynML9zp8Q1hZR2i1fwMSxfdvSiZ
      eSE433WdZDJJXV0dat685zZXQvF4MKIRMsnklrX5eaKqqgqjpaVoeWFxkbgullnA+OBD2pUi
      4/MCufPnOfNXf01h0To4OjbG2UuXmBAueibDdgQ+IZbl7QLoLOfKqyYGAfYSPrOS6eSkpEJR
      ly3+9cSelTuDEGJjho+Otm3s3L6d2dlZdu3axZcfO8nspxews7mNPL4lKBHAWllUG4UWDaME
      /DTU1zM9PU1wUU7fahOmlHLZuQRfJFz67DNiN3qIKQoToSDJxx/DHwrhjE8QWDJMQgi2mRbu
      zAzu4vx0jwyTjVTgFkwq1whak1JSqypM3yGcfNyxqVZVxhybOdfBWTFHC4rJoJ5mKDbJDX3t
      UvnrYUP7hhCCY4unwAshePrpp/nk0kUCjfeWFLKR98LyxXmvHlchBOOK5O1zZ8mn08RdZ+tK
      ZAOOaWLkTUQ6g2EYd3VC+4NGVXU1VxobiHR2sueZZwgEgywsLJCyTFI11bjTM3SIYh7hpOti
      PnoCr9fL9atXefvV14js2UnV5avsdOVtZTdLvxsoFOT6BOAXClOVk7RV5sjbgqEFH1beQ76g
      4doKbdtmOVphIQRcmHDJzVTg3yRzFPl8Xm60uFMJ8USCf/zJT5hIJTGqKvFUxjDCGwtJvpcq
      ElsJp2CClCiGvmqNmruBdBzabcnzj53kn955G0/B5E+/970vpF9gtdzsi6feJv7GG4RdSdx1
      UQ0d3evFOnQIZ2ICq6eXRkWQcyU3XZfHl+yAS9sypaTLNElLl+26To2qrWrJsaVkvHKCvfW3
      h6lYrkAVUEobzliCixMBtsdr8W1iPu+K+RmGQUFVMKoryU3PkBkbp/r4keIxQ6tgqfJyN5Uf
      lj5/r1akEtS7tPuTShPTDRQpyVsWXo+HpGXiUVS2V1Xz5KHDdN28yYKZ5/tHj38hFz/cbqTo
      unqVqd5eAocPU//0U9QLQayyEk3T6D59Gt+HHzEFjNs2zZqGf0mS0dK2Bm0LR8J+w0AAI47N
      +UKealWlVV2eDhrHJuizl815aS3oyvJ1FNAlB+qy3HTnkKaOP++jRhho64x/2nXvbgeQspjD
      +eOf/zOFhloKV7sxpUto7260wJ0dQFuxKKSUuJaNskaJva1O8JdSItMZ/uDoceprapmemeG1
      99+lpbmFR/buoyIUKif5/Lc3Xmd8fhZvMs2JAweorq5hR2fnF5YYstksruPgXTyBMpPJcO30
      aXYcOcLAhx/i/eQMIat4ntqM4zBq24w4Nt/w+YtFR5b0e8K2CSgKFUsKBbvAnOMw5Nhs13Rc
      JAaCdMMEO6s3p2eWpnw+pzCZ8GHNhWln9ajVG5Z5dwRQQjKZ5NfvvctgNk04bzKdiCPWOPDg
      FsTa9Y7uuF7lst9ys3NEd+4oVhleouVLKclPTaN5vagB/6bt/Le9VUpC6SzbKyLM2yazuRwx
      TedLR45ybaCfWCDIwb17kVLSNzDAzy5+iqcyhplM4ebzhF3Jf/7u97+wjrESXNclPjeH7br0
      vPkWvutdBB17mWIMxarUSddlwrHxKgptSzi7lJIBxyYmFEY0lZDr4nElc45Dm1b07oYUhQHb
      ZP+uSer89l0zDinhk/4o+3Krp812mea96X8VFRX84Ovf4J9++S90T43gUxSMhvpVi5muxFZw
      w1BzE5mpafLz87iLJ4urHgN3boF2w8uzJ05y/kY33fLuBxHAm0wT9fn5NJMARUEqoJgFQqEQ
      X3rkRPk+x3F444P3MVqLOa9GRQgqQkycPsfVri4O7d9/z31+kDj1859TdfYclt+PbtnUruGP
      UYQgrCjoaMytUpo87vfz/vY2tJpqhKZR+8k5vpTOknFdXAnzjovhs/Bpt86ZmM9rXJ8IEfWZ
      bKvKEdA3trv75Oq+KldKLOS9G0AURaGjvYOJSIipDz6m2rI2RABbUiFaCAJ1xbr20nGxUyla
      bejYvZfGxkaklBzY1k7+8iX6dRXVu/mdzsnlyMzOMdTqQ/H5sJIpvKk0zTV1+LzFzKb5+Xli
      sRgL8TiEQvgSKVwhmJuYKJ6MaVlcvHKZg/v2fWHFIIDOQ4cYT6VRe3ppcJzy4dZr9WnUdZjV
      dUY0jWbTQkUy4fNytaEOX3uxmIBTMMkh6bFMDIrBbYYQ9BXgZlczjnBQdIuQ5cdwJXUZncuJ
      JI/unF5bkgBSpsL1oSiRrB9WoQFl0bu8JXvy9qYm3u7rwVdbsyxS9E4K6704tla2KU2TNkXj
      icNHmEkm+NdTv+WPv/0dAPZt72Tw6mW4CwIoTExhqwpiYhLFMAjU1mD5vAQCfmZmZ6mqrMSy
      LG7299PW0sJ/+fZ3EELgOA6vvfkm0ViMT00bb2Xlpt/9sKFtxw7qW1vpunKV6Zd+RmyJT2bp
      +XCu65JQVS48ehyqK7GyOS709eMPBNAUBaO1WC7RdRzMmVmeTueoMG7NzbzjEFAU6hYdbjg+
      UCCmFHWIGjfAUFKnpcIiZSlU6G6ZGGwXFtwQA579LBhZduZvtyCVUKWq96YDlGBZFv/nX/2I
      ikP7b7P3bkQRXSte405Y2rZTKOAUCngl2H4/SInfNMF1iafT5GbnCO/ZtaHdaSnMVBqki1FR
      QWJwiHBbKwDa5DRqPEljcxMHdu3mn0+9xR9+5Wu0LKkYXap0sRCPowhBJHIn/eiLAcuyOPPS
      S9RdvIyH1Rncb12H6adOItNpRDZHbHiUJxe97hcMndlwiPpMlvlEkn2KSoum4SCZcBwKUtKx
      GOa8cg31WBZZ3SRYmSJ49OtcvnyJJwL9KDhM2SFqHvshdZ2HufLRx1S+/S7BO6ylLdkBVFWl
      ccd20quEL2wUd2OxWUo4qseD6vHgciu+I5tMsreqhpTpMOHz05gpkNIsEn4vcgPn9UopKSQS
      BBuKDj9ZOv7JtllIp/D7PIzOzzP+yceo2Rz5FQewlUKFY9HobW1/kaHrOjuef56ey1doW2MI
      v6SofPLOB+zWdBzpUqtqIAQ5IaiLRtHHxjCk5DFNxyOKFpkZ12WvYZBf4iFeOUcZXGK1cSJ7
      n2LPc99n/1Pf4p2f/y01C2eYCh2ms2k3pmmh9fRyJ7Yupdyag7KllFjrFJfayPMr/78ZglhN
      DnVNk0g6y972DsZzGeyONrSKEF8/epxaqazqnbUyWZJDwyQHh8o/nnBFuay3EQhQMT3HMV+I
      kMdLQREUomFq62r5T3/6H9jxbzAxfi2omkZ6ncJULlC5GMJcu2gFEkIwXxnj8H/8c+LRKIbH
      ww3bYsS2QQjyUhIUCjqC7Boe/+2aQXa6gfDer6IoCrqu09B5iBqvRYN1kxuf/JpPfvMbImNj
      aKzPWFOKsjU7gGVZpBaVmHvFvTrNSpCuy569ezl7swe7oQ4hBKZZPKVRug6l8ZWOg3QcsqPj
      qOEKKlqXl1qUUiItG6e7l+efeIKqUIh/ufgpWriC5+ub2N3ZuWqFtH8rWGsO8qk0zeuIuJoQ
      2MC0oWM1NFAxOERQSrRCAa/Px/f/j/+dX/34x9QNDbNd01GFQJNF60yDpnHBLNCqadQqxdqf
      KdchgUOF0Gj/oz+iabHsuqqqdO4/Tn/hhxw69hw+vx/XdRm4eJHZ116nMh4vOwdW9mM+XHHn
      hJiNYHJqiqtzM2uXFbkH3LXVxHF4Ytt2rk2MYxo60rZJp9OkpqeZsExcw8AfT1KbybHNF0Cx
      bazqytvep2RzPFldy7e/+jXamprw+/0M9PXz1aPH2bdr10Ndze1eIKWkv6eH/t+8zszEOHOD
      g8RzOabHxsjlcoxcvUb10DDKkt3XBKaDARzLxgM4u3bS8Pu/x+7nn2fUdfD3D+A1TQa6uqg+
      coSO/fuZnZqib3aGRqHQ5xSdZD4hMFULq2aStCfPnJbBqJmjvmGe6wg6v/Qd/EtKsui6Tk3r
      znLuhRCCWH09wQP7uXbtEon8An6pobJ8PQVz+a1Rgs9dusR7CzNbZuLbinacbJY/O/Yop7u7
      6HFvRSWm+wfx1tZAoYA1MobS1ICq6yh+H2KV9LqdNnzjy19edm0rwrIfdowODjL6o7+ikUUu
      L0TZDWkBM45DznVRAF0IGlWVuZOPcfBb3yQxP89UXx+dR4+h6RpXL14kl89jvPoaVQUTV0ri
      zz/HgRdfYGZmhl/94hfU9g/gN02mbJsqRaVCFUQ6RmkI3vI1uAgmdv+v7H7k2Q2PfSaTpuvd
      n2H3vAWWQmG6CkVK6vGgbzQc+k6IBINI6+6TVFZiZfTn0p9SmfI7nkKvqiwkEizkb7nScxOT
      BDWdk7Eqtika/pYm9GgENRRcdfG7to2mqmSz2WXXH7a6SPcDNQ0N9Hk8jDsO065bPntLATxA
      k6rSqevlej0Djk1OumiaRuX/3967B8d13Xeen3Puvf1+AY33GyQBEiRIgg89SVmynrblxLZk
      2Sm/Yu9m8tjJOFuZ7M7UVk1Nbc0/k5qp2mQnm4mTSXbW8WTsrY2d2FJs2bJkU7IsSiJpUnyC
      BAGCxPvRALob3X1fZ/9odLPxBkVQIkB8qlAg0bdv3773/M7jd36/76+qit0PPYThMZgYG2P0
      u9+jfdcuQp//HIlAPjxC//kxrpw8CY7D//jbv83Rf/W/kmvfTlPTOCnhcN22COg3n2/OEZwd
      9eNo82snO47DjZ4eLp8+Te+FC4tUQILBEAc+9pt4olV0VM2yY+cN2jpucMU/QUatw0YYQFND
      A86ZU8jy9fd2lBbTWKhJtFJCtvR4+P6FsxAMFCMNDcOg3OPlbGKCVCjf4y9sxsp1cXMmKpUi
      YFpM6h6SyeSmSHK/FQzDoMnnI5DJcs22KFMKfUGhbyEEAU3DBoLbttG2RKX5WHk5s207CEci
      xPbuZSQape+b36J8ehr5d9/mUmMD+7/2VcrjcR544XP0f+eXNGg6uiY51hel0SvwBGc5M+bn
      qBtn5qevc054CJWVoUvJ4IsvEe27hqbyxbPfaain4onHaW5vL65fxgcGGL0hmSJKvGyWmZyG
      7jd5eyazPlOg4dFRvnnybTT/+qlFrDXq81Z74tXOZyam8A4M0dHWxiMPHyEUCt3S+TcTx//k
      T6m9McBF06Rd0xZJ1UspmfJ4iP7W/0DTtm1LPot3XnkF9ZOf0vA//S51zfk9FNd1efuffkjo
      rePEcjm6DZ2ap58m1NKE/sr/wq96o8RnYxiaZKyxkeC2Vm6cO4eYSRJ+6EEmL15k+9AwUSkJ
      M3/fCSCnFAm/H8eyQJOEcyZhwAauxwdoLMty+XI92/CuzwgQDATwI1m6zsrtURjSFobEwvrV
      0oV8yIOdzWFIyde+8EXKNojv3rKsO5J4n81m0SYmSbouPimL0vClz8EG9I89TdO2bSSnpxm5
      dg0RCLCjJEk+VlVF1nGQJaO1lJIHnv0EvXW1DP5/36XmM58iMTBAbWQvx3PbqTJNvJrGyKOP
      EI3HCQaDXL/aS+f4JPbPX2c7ioDU8tWG5gyzkHjkui66lFRnMvlrdZxiPTJNKdzpGDf0CTL+
      JCLrW581QDgUovIOld4sTHsK83/IP/TS2lCw9N5BqdLbansLqat92CNj7I6Wbagd22yJUl8m
      k8FeYyX61bh64iTlmQzTyiU+13gX7vJnhCDe1sbY6CiWaaJcxfYdO+adJzM7y0RNFYEFNRyE
      EGw7eBCxZzfTZ87w8Kc+RVl5OfUPfg5L8xEBRvr7qaquZntbG3q8nEkpiAMBRHEEKrQNrWSE
      Wi5tVgqBMD3YrmQ4IzkhE+tjAAAf2dOJnZjCXrBgvF0K9QQMw8Dj8aDrOj6fD4/HUxwBFhrC
      rZKdmMQcG0cPBnjs8MZKYgmH85qmtm1z5vRpJiYm1uW83oo4g1JgIJaNUnd8PrBtvF4v5ZWV
      tB9YLBPfef/9HPn614tFTFzXZXhwkHQ6zakTJ5gaH6fxiSeK72vcvp1La9YqrQAAIABJREFU
      kTAnNYlztZfjr76K6zgYPh85Iec5IErrTci5UapQe2I5IkjqwybPtE/zkfbJ9TOAuuoa9gVC
      mOukFHG7ySy38n5PLEpZeTm7orENu9jVdZ0HHnyQ6poaLMviwvnzt3W+be3t6OEwSeUuOU+e
      8XhwPvoo1U1NRFeQgyx0Uul0GoCJsTEu/fXfcO7f/u+kX/4xuz79Kern1gaQD7Hv6Oxkl+0w
      5vcRjMW4cP48e7u6SFRV4N5CbFkpGeUy4TrkUMxkdcp9LgFjnbxABY4+fISeY69hrlM21lp2
      gtfjcwrD+eGuAxuq918OwzBobGq6rZ10x3HwP/YoftclNTiE/8RJUh4PSa8XoWlUfPITdOzf
      j1KKqUSCTCrFxNWrWEND+BoayN0YIJecIRcMYvRdw/J6KX/kKNv37uW+P/xDet76JdmrV2lo
      app3jVJKdjz4IG+dPkPXgQPs2NvJe2fOUFVdjaqt5afTMxy0bEKWxUhdLWWjY4Qdh6wQTAcC
      ZJSLnZ5EGRa6o+HqDjIyw2BGsq8qi2VKxjIabXOlitfFC1TKy8d/ydnZNEJbPdhsNVZ6eOud
      7pg4fZaP7unkySefXLfzbhZSqRSv/eVf8dAXv0DZXFFCKSWJ8XH6jx1DvP0uXschKPJKEa5S
      yLln122ZtOkGM1IS/4N/QU19PQBjY2NEo1E8y6wd0+k0gwMDtG7bRiaT38uZmpqiv6eHpro6
      Jnt72f3444xc7WXoZz+jrKuLur2dvPo332CH+AU1wXxyjSbgRlonpLuU+fIu9ZGMzkRGsrPM
      Wt8RAODJw/cz+tpPGV0H/dDlerCVGv/7ygV2XaJeL54NoHr9YTCTSFA/MkL/G28wFAiSEXnV
      Z/3V1yi3naIjsvBbljwzbW4NEVEuQ8ePU/Pcc0BefGslgsEg5eXl/MO3vkVQ06jauZOyigqO
      PPYYAI3t7QBEqqsYiEa41NdL88EDNNbkqEvP5SbMXYarwJA320S132Yo7cVV6xQOXYqmaeyt
      b+DYhfOY4SDiNrxDt5on8H4av3JdyjM5Hnz0MTp27Xp/F7qJUUox/Mu3qHRc+OVxACLkw5c7
      jJWfra0UDgoBTMbKCHd0FDu1tUzN4hUVPPv5z2Pmcvj9/iU7KCEk3soqPnLfYTQpGRn1EZEa
      cX/eY2g6MJ0TNIZKN1PzxmrIdV4DFNi1bTtB3WA6nebUyBAzvvV1kS7X0G+58edMusIxHjj8
      YNGbci+x2hohnUxy9Y03CJ44Oe/vEtBZvRGPOU4xFNolL6l+q/j9fvwrbLCGoxG6nngcgBu9
      vaT6uwm3O7gK+mc0TBc6yi1KJySOAinmDGK91wAFTNMkmUrhuC5/9aOX5j7ZxdfcWNyYWAtL
      Nfbb1QZSSuGk0hytb+ThTbLwvVXGRkdxHIea2qXV/ZJTU1z5xl8SHxtHisW6TH2WRY2u4RPL
      OxKVUnTbFu26AULQqxTejl14ohGM2lpa9u0jGArNu/+u63Lp+HFm+67RcPQI1SUZdqvx9y+9
      yOyZF3ksPk7v9Rim5nJfy9SSzW04rTGeXaeUyJVQSnH8m39L/XtnGVcul31eBhvqyDY1YJSE
      GWQHh8Bx8FRXIe/QploBJ5Xi2W3t7OnouKOfczez2rTy3E9fJfTDH6EtaPwzrstly8QvBI26
      QXiV3fiM6zLgOFRqkmHHoU03igbVHwxw6F//K3wlPfyFV17B//KP0RGMR8LYzU3EDx2isrmZ
      YDA4r/PL5XJ4vd5iDvaf/sd/x+GhGQyhAMGIsomVJamJp6kN2YsMIeuIOzMFKkUIQctHH2Py
      7FlyLa0cfPhhtn/3e9iXe7nm9+HMadu1JNNUaZKzoSCXHjy8YlzRWub6Kz3geq+f3ff4fH+1
      UW/62DEiLJ4m9dkWXR5vUcJ8NfxzcvYjjkO7bhTPJYSgMT3L6b/4Br6OXdR0dlLd0IBpmsX4
      noqZJO6Zs3Tf+Dm5Sousrw696X7CdbuYufQa+vAJTF8V+vYnuHGtm4lAjDItzZTj4JOCQ5oP
      kj6mknHei0zQXj+Nr6TF+7Q7tAZYSHVjI/0dHchr16jftZPk3k5q33mXulxJ9NDcdvuB1Czq
      jbe4/NgjCCGwh0eQFeXzZBeLW96miWvbCAQIgfR6sKZniDgudWXl5HI5NI+HYTOHbuikXRc8
      Bk4yeU9Oe9aKUgrd64P0LIq8WzM9J3ZVq+nFxl+qBLHw/aX31ycEJovXG1II6geHUAODTPzs
      5wzv3Yu4cmXeMSYQ9c5S58mB243q7SZ7RVKmu2CAaU7jnL9M1IVz051EhSAjBaa6aeRlaERm
      KunJ+amum6AilA8XmcmtU0rkcmRmZ3GVIhgMsueFz3Lx29/hjf/jT/AfPYKpFHVLNEIBdGVy
      ZN94i/FQgKcGhzkfCnLl0aNIfX5MiicxzWO7O6mMxxmfGKdnZIQkkh319Tz84IPFc05NTREM
      Bnnv8mV+er2XwVyOxNQUZRso5mc9KcRFlTbcnitXinE8V44fJ55IkFSK646NgcALNBnGvPDx
      QqESTdNwHKfo3SkYQCEkoUbTGF6hvKkQgojjwq9OL3rNA9i2VnIsRcEsgLSj0+fU0OW7TuXM
      CD12gDpNI6jNN0pNCBrNMIlePzdiEyjDZDjhv7NrgNJpiJnLMZlI0P9f/hqztZWy5ibkP/6A
      0AqaQYp8L2EB39+5Hac9X4kkMzJKu9fPxx9/Yl648sJw3YXYts2f/OAfIBLmgO7jiUcfXdfv
      u1HIZDIMDg4y3NfHzn37SUxO4A8E8Hq9jJw8ieeVVwkIwZlcLi9iu8xoWcjVKNz3QgXOwshQ
      yNdwVV4Ocfv7qOgI0Fc+yL669JKvKQVvpZuplpNc663ioBL5GcEKFNqWYg0VYm6HUn+vbhhc
      ee89vNMzRC5coGr7dtTnPktymZsrhChuqBjAI9092OMTuJZFowPPf/LXFsXqFz5vuQemlMJw
      XKRhMGrfieDtjUEul6OmpoZDR46Qy2Zo2baNcCTCyZ/9nMTUFGOHDnLtYBfZ8NKisgWklMWA
      NF3XiwZQ+FsBxU3R2veLbdvzjK0QBQqKvd7rzOx4ga7f/T0SntU780LbKmS4fSBIKXno8cfx
      furXmIpGOf/Nv6Vl927k859hcnVVXCoURPr6UUBtVdX7ygUwDIP7mluxMxmuTSXWNZxiIxGL
      xQgGg/h8PuobG9F1HV3XOfzE4+x+6il2Pf0Uu55+mmCrl6veacxVipKstp6ylMK4zTWXUgrH
      cbBtG9M0sW0bay70O2S4lLujNLW2wtEj3IpAzwdaukTTNHYdPcqDf/B1ZDbL5ZOnaO3qYjwY
      XNUEJPDM0Aj7/+kV9PTSw+FauP/AAerRiHp9WwvhObLZLLlcjnQ6zdnv/Qd6f/Dv6f3Bv6fZ
      vUJX2xjjVUOMuLn3ff6cUnhv81ZrmlbMASj8uzSOyHP9GMnpKXY9/lGG4uVrPu+HUrvHMAym
      bJvkG2+AEDzwR/+Sy7U1q1qugWCHEDTvWFyWc63ous7H7ruPJ3btBm5dhGuzoZTCnFO0cxyH
      eruHdpH/qfOmEAK8AZOJyjGuatNYS6g9r0ZU05h0XGZuo7xV6XSrMOUqne5W6zP0n/ghhsdD
      +PHH1xQ2DR+SAQghePjr/wK7spLXv/lNAsEg9/+z32KipTlfGdC2cRynqABRqgQx5jjULBCv
      ulXi5XHaF2Qu3YsopchkMsVMu+U6gpwjOFCVYc/OUUbLR5h0rFvuNNoMg5Tr0mfNf6+9Tp2P
      EBDue5Ghgevs6NrP+H2H1pSi+6FVb4tXVvLI176K7vWRy2YJRyJ0fO2rjFdVzkuDLPU0KKWw
      NPm+cmCVUti2TTabJZPJkMvlbikwazOilCqmVKZTScbf+Gti3sXuyqChsF2BIaGjPoVv2wDX
      ZHrNvSzkG1rGm8VoGOZ62SjXnRxnSDJUOcgVLYW1DobgJ8vMaD+GYdD1wguMN9Sv+p4PtWSJ
      pmk89pUvF//v9fsJPvM0/O1/W/bCfLqGZZqrGsHCzZjCqKLrOtlsltnZ2WI6nc/nW1FiZbNS
      iLMHmJlJ0mBeYilxP10o0hYE516rCVuU7xri4o0o5dNxInLlezfsmpgVE+ytSaFLgCzJqhT2
      jM6eChO3epbucR/Z0XIa3cCiBfPYrM65iVWe99wqMv3qN1CeEB2dXXjb2uDGwIrvu6tq9uRy
      ORp37OC9aIS66aWLTFfbDr2nTrHn6NElXx+4coWhX76FebWXtNfDw7//zwmGQkVPh1KKUChE
      MBhEKUU6nS5ulHnmfN73wogwOTnBmR9/i4A+FzaczRIXS/fCfl0xlZPk673n8Wiwt2ma/qks
      QzeqqRWL3Y855XLDO0NjwyQVgfkjS9jjEjJcsjb4dNhVmSVXPsiVsQBiIk698hW9+VGPoi22
      1mR/m6un/xF39z48ZTEcpVYM27irDMDv9zMxPo4xNb1ixKj59jtkDx9epMuplOLGD16kbmAQ
      BVwO1RTdpaUxKIXfQghCoRCZTIbkXHhEKBRC0zSmphIEg6FiovVmM4pwOEI4HGbH2Is3b/Uy
      rSFkuIxmDEoNAPKPqLksxzVGuTRQTqPrJ1DIAXYdpuJj7KtLoi1z61oiNhcTBnvK843bq8Ge
      mlmmy7JcHYxSlozlNxGEwnMLA7SeHkIpxfaDBzlz8RLx8xdYbvy4qwwAoDwe52rXPjKnz+Bf
      ZkcvPjjE5WOvs/fpp+b9fXRoiODwMJDffQx37ce/SpK7EGJRzHnf1R6u/PgvyFx3qTEipPft
      5aFnn91UQriGYWC7a4tM1yXkVqhp3VyWpT46yBsXK4ibIUwjR7hmmo6qlRVC8kkpi/8e9boc
      aE0wlJrh/KSHI7XZxQetdL3WNI7j4PF6OfTV3+Tk//NNqs6dW3KHeF3UodcTIQR1+/YxU1nB
      eHc3HtteNIQJwO3t42pPD2ld5/rJU1x77WeMvPJTqi0bUymOOTa7n3qSslVKE40ODXHptddw
      pCQSj3Pl/K84e+IXJKYS+CYt/P4g0rLp7enBiMd56djPmRgZpbkp74naiJXgC9hKIvqPzc3L
      V2YwrVEbXN6NKQXEwlmG9TSHWqeLAWcrMWMKTFdQ5l36vGGPymdzhVeuKL+QoO7SP60ob+rI
      7xnEYiTfPbGkfP/d0/JLEELQeuAAVe3tjPT0MPqDFylPTM0rehxwXQJXejCv9FBo4qctk25g
      2HGo37GD6vrVvQCx8nIma2rJmPkH1rqzk5qmfMzR5bNn6ejqwuv1Yts2mUyG9sYm6qqq5l3r
      RuVWvPKe5eYxJcR8Lh6pWGs6+KwtCWi31rjXglKKRP95kjMzlJXHqW1pIfHUk0z+6EdMCBMp
      QHclQaXdnQYAFOfjof37mW1ro+/ECWbPncffc5WwckGBKfKpeQpAKcpFXlveVoqqxkb8fn9e
      4q9k42QhHq+XXfffV/y/rhuEw/kZ44GSiNKCONfh/fsXXedG5frVbvQpA49UbItYGCvMsyUq
      n0u7wtdVCvQ1ztWVgrQlaAqv/ybkBb2L9qd/G70kZ9mtqeZKdYhHKs7g1SBjCxKZu9gASgkE
      Aux+5BHU0aOMDAww/O4J3GyGskOHMGdnybz8Y5KDg9gKIlLgkRp9Yxcw/+40Hl0DaxY72krr
      kRcoL1/7NvlmxnVdYpMnaI3PFa4b89IeMxma1XGVImvPzZgFoCBtL54nFQxiOidIWRLTFYTX
      WL/3WlKn0u+suLj91ZiO/xa3fGwXvK2HEFKSy+UIBoNIKdm5axezpxUeO58t5tcV/rC9MQyg
      gBCCmoYGahoa5v092dzC63/1l+wZGUUiuCySPOJ5F8MCZcFwUmfi6hCvX0vz7O9+fcNXbF8P
      zp18i1rzSrGG7v6KHCdGvdQEbGJeF5+u5i0ZpbjZ+8/agmszOq6CobSkNepS5nUo1138+uoG
      MGsJHAVR7/LHDqYkNUFFTeDW6k6kbYkpg1x4+6d4A2EMr58dnYeJRCIYVW0weGbeHtGmaAnh
      WJTHf//3ufzGG4x3dxPp6+PtS1U0NkxyYzxMJB1mh/Iw2FZXjFffqAvX9WLnvsO8+m47WnoQ
      v7TYEc7SGrEwnbzbs8C8zUQXhtIaE1lJe8wiYEDI0PDpUO7Lv6c/qZG28vd2e9TCVXk/v+lA
      0hSEPIqeGZ2oZ+UVyFhWY1/81oV+Zy1B8Ff/mYaQjRQKVwmuXm6h6ZP/GtNXg+VKDOkyY+kk
      VWBzGACAz+9n71NPoZ58komJCSYHBzn1k5c4lJ7Ei0AJUGUxNC0vq70WA0inUgQ3aX0AXdeZ
      yiqqNckkFZyenKApmKVn2qA26JA0JQHDRS8ZBi5PGfg0l30VN2VGmiMObw97mLWh0udiu5KO
      cgvbhSvTBrrIu1D9uiJgKPpmJK0RmzPjHgwJtcHFi2BXQcq89bWV7ULfjMYD1bm87KHIz9+2
      08vlH/0pZfd9iSuXtxGI1RE/9BzN8co7rwrxYZLJZLj4jb+k4sYADpD+0hfY09W14ntc1yWX
      zXL22OtcO3+ermc/wdjICPsOHSIYDM6LnCzdO3AcZ0OFUyiluHH9OpquMzJ4HfPN/0SlkWEi
      J8nYEq+mUAg6ykyEEAzPSqZzkp1li6ckKUtwYsQDQnCg0iSySu8OMDqr8atxD083ZRa9ppTi
      6oxBpd9d9VzdUwYXEga/3jJL95ROS9jCoy12TlzWOqh9/J9TXV1dTNyBO6gLdLcwOjLCf/9/
      v0M4lWL/xz7OoQMHlj126OpV+l/6J+TwMOPJFFZzE3VTUwRnMyTKy2j60hexMhliVVVYlsWJ
      N9+kpqEBw+NFapLdnZ0f4De7fZRSJJMznPqvf8T+8PgiD8/xER+7y3KMZ3USOUlXRQ4p4My4
      B48OpiMYnZXUBy1aIzZpW2C6GnVL9OqlzFqC3rk1RGfcggXZILYLFz0HYWaAvcFRsrZALtgN
      dlV+XXIxYTBrQWPIZnhWmztfnlIjuGTWMZCIs333/TQ89CCD585hJRKb3wAymQx/872/JxuL
      4pWSz3Ydorq6GoDxkVEiZbFiYsXxP//P1Pf2kXFdrisX8fBDNB5/Bx95n3lKKQxgJhZD+HwE
      hodJhsP0hkPc/6lfp3UDhlgrpbh+6RTJ1/8MO5Mk6wgaQjYhQzGSlgzMGpR7HUwXcrZASsGs
      LbmvKr87+6txL0opDlSa9EzrNIQcvNrKmkNnJwwMqUjkNHaWWcQ88yvD39C3EXn0Dxgf6KXy
      vT+jdyavMBrxQsSwGc9oZJ38FLYm6FDhc/ina0E+1pSet6m38PPPDwUpH68hKyRlcy6sTbMG
      WA6/38/v/cYXuDE4yDd/8jKv/vz/pOORo+Su32A6nULMJNn+yU+STUwS6+0DIK0UHgXywsWC
      kwQJROZuqH96Gqbz8UqhVIraVIorv3iT6rq6DVdfQAhB066DnBj7POH3/ormsM2pMQ8dZSYx
      r8vQrKIlkp/2OC5oEs5PluypKoVXg6mcxHJFsfHnX5ofkauUIutIdAExr4tXqnmNvycTI1d9
      HxV7HsMwPDiaj3MJH3vLZ/Fp+YjUaVOjNugQ9pSUT1XQELRW3dHeWZ3ivDOCnYjhU1783IWh
      EHcCIQSRcJhqf4BQVSWTr78Bpsl9v/e7jCaTXH7xJQLXrhGfe3YBKRl3HVpMa80CULMTE0yX
      xaioqdlQa4EChj/M1MWfEdVNemY8TJkappsPGKycE5otLHxHZjUqA3lV6BlT4iCRQhE0FKEl
      9gFKhcwuJHR2lVmEDEUiJ5myfSRVkOveDgL7nqN298N4vPmYq3A4AuVtpCeGqJBT+PS869S7
      4PaeGPNS4XMWuVUXGp8QUBk2qaicYdSbYlhZm38KtBDHcbhx/TqpkRF2338/6VSKU//pz2hZ
      UNlm3HEYdx10BJWaRnQFr5FSil/FyznwpS8SmJP13og7xN3nTnH9re+y0zlP2hZcTHh4pDZD
      qcTOtJlfDDeF8z3w5SmDnCuIGC6GJqj2W4tCIVwFFxMefJqLArZH8woP3Wo7gfu+QiAQmieP
      uJDJsSGsd/6GVm1wyZ1o22XOe2UT8axtI04pRf9k4N4zgIUopTjzgxcpP/b6ssdcs21Srosr
      YO8SkuBTrov68heJV1UhhMAwDAbPn0fYDkq5VHd0UF1XtyGMIpvNcvXtlyi7/G2SOcVUTszz
      /ExkJVkb6kMuSkFvOsBo2f1Ut+zG4/Uh7Vm85/+Ocnkzn+NiwmBH1CJjC0JGvidOWZKhzj+g
      rnn1dZNSivGh6+gn/pwGb3LZ485MeNhbbq4a4aqU4kbCjz5Yt/nXAKsxPT1NcmaG6JyyWYFS
      Ua8mTUPoOhespbNMw0Jw4vs/wH76KWqam7nwzjvEX32NCHkx2bGyMgyfj1gsdtdPj3w+H7s/
      8jzXyutwj/8XMrMphswQufI9yGg9QvNwrfsMtpZDb/84u7uOcmBBB3pGaUQu/DlpWzKZ0/Bo
      LrrMR3cW0IRCifnNb6TvApmpUZr2HkVqGsODA2RHulGzE0hzmmmnmpiVygezLfAKWa5Aojg7
      YbC3wmahZwny+xFXJwK4lk50soKg2CCxQHcSy7LICYHjukUhrsJucelvIeZHk1+0LDTAUQpd
      wO7pGQbfeZfqpibcs+eKAq8uwFxcytsvv0zd9u0079z5QX/NW6a58yFSzXuwrlyifns7oXCk
      2EHsfuwFlOuiLbN23H34Uc4ID9LwE4mEuXbiRySTrxMu2WH2aQrn6muoxq+STM7g2Db2if9K
      WzBNz/VfYPkqaDXfI6i7CPJhGMoPfUm9GEhX4XfQRH4dMpHTOVyVY3RW40JCJ2K4xP0uI7OS
      lCkxs170mTD1dhDJnOLgveAFWg2fz0cgk8GYixYteC5KM8mKYryOU0yxq5QSF0VYaPjmjvXM
      TXP8Dz/E1D98n5BSBIRgZGICw+vFc+wNpl0FG8AAAELhCHsP3Lfo71JKWGFNpBsGBx/8CJAf
      SeubWun+ux7C3CgeIwS0ZE5y/q1qYkM/w3VdvMLGIxUd3gFQAyxM4xICWuc8UrYL74x62R6x
      qQ06RLyKyaykLuRQq/IL7P6kTpXfQXcF7mQVUaEV6zjZwOzRI/e2ATiOw9t/8Q22jYwumTIJ
      +Qc45rpFdeSEcqkQGmEpeSuX5aj3ZpaYMzmJUopAKMTZgB8mJ6nWNNTJU4wdf4cmy+LGiROM
      HD5EdU3NB/+FPwQKIrnTZV28MeAnmu1nPCOJePK5A9NDr3KgPsOlKQ9tZWuP/dFlPpusai7X
      OGg4XEh4qQrkp6llXreYaHNj3EeTuCmsnJAS+cRH6Xjiic1lAGutJQb5BPxzr72GPTBAWkoi
      UlsyAdMBTpg5HvJ4qPJ46LFtxoQDCh72+uYVhKvt7ubi2BjlE5M8LASioD43OsbchdEwk+T8
      L96k+vnn1uEbbwxmZ9PIYAV6aILOwGWuzuSrNO6qMGlzBVLkPUVrRSnoT+nsjOUbuxCCqZzA
      J+1l9YoKbWKiIk79b36FeHV13jhv+9vdJbiuy/mzZ6mpq1u1AiFA38VLhH/yU+KaTq9tM+w4
      OECTphMqGd4toFXXiUgNKQR7DAMLhXeJGlkBBO2JqRWnB2+jGLxymdYrPTS2NC87j95MdJ89
      ReWVb9Hhy1dp2R61SVv5QDlDV7jq1sRzXQVZRxL22MX12Y20hz1lK+cOT1ZW0PrPfotIWVnx
      b5vn7ivFpTNnsB2HXDZL/YKcgVJsyyJ57BjVcw14+5zG0Htmjj7Hphm9WPqnMMEp9PSaECw9
      VqyNWlfRNTrOtb/4Br0tzYRiMQK7d7Njz242ozvacRzcvmNU+ecH0RkSZi0IemAgpVF9C3H/
      WQfSlsa7Yz40IRBSkMwqnBhLKlBIzWWiIr6o8cMmMgCpaTz/pS+RyWRWTXgxLQsxMIjNzRuQ
      dl1iUqNB1zlr5tilG2SUwiME8jYa/EKa59ygftelorcPQwhmTp3ih5EwT/zhHxIIBO56V+mt
      oGkagfpO3J6TCPJx/lk7nwyvS5jK5X9X+teeoXwjZRD3WUybGger84Yza7pcnjII6Kq4SVcg
      GBPEnn5uUeOHeyAadCkcx+FH3/4O8RMnqRKCPtsmIAV1Mq86bCtFv2PjRTDsukilFvm615vr
      rkO/10tTIIDcvp1QbS0oRct9hwlt8BKuZi5Hzw/+GGPsDN1TBtsiFjlH0BKx6Z7y0BZdffOq
      gFLw8lCQc94An9Cn2T0nmFWY+6csybWkTmPIJuJxGbXCBJ/+t9Q2bVtybbhpRoBbIZtOMzM4
      yB4h6LYt2nRjnuKELgTbdANHKa46NtWrSP+tBzVC0mBaCGsGTp5CcQqUovvnP6fi+edo2rdv
      3vEFrdP3o5P6QePxeml59o9469t/TG3gPNWBfB1f08n/3ApCgOZXqIhGteMscnyEPYrOuMWZ
      cYP2mEW24RHamrcvf757cQS4cOwYqe/9IxOOQ1gKmhaU7lFK0efYOEAIQUTKouLZh8GslOSe
      eYpAYyPNra0botEvRTaT4Rf/9/9GcnIYTQoqfDbtsdWjOBdyLuEl6ndp8C3vNnUUnEnGaXjm
      X7Jj5/LlcO/JESBUX4/UNWqWmWtPK5egkFTdJXPxgOsS+OHLWCjOPf44XZ/4+Id9Se8Ln9+P
      3P4EkfR/m9MkFXRPeWgM2YTXkEVWoD5gkrZXfjaaADfaQiAcXfG4ezIzvK65Getjz7A4GS/f
      +w85DhV3YdK8gcA6815Rz38j0rn/IA0xnfaYSXvMpC1m0p/K98OOC5cSBsOz2or7AiFDkbLk
      qq7TmDWMdym56xLuvqf8AaDpOnsef5zUnt2LXjPJNzS51lXZB4xMp4t5yRuRypo6MrVH0ES+
      lzYkeKXL1RmDU+M+Yh6HyaxgeHb5yYkmIKjZTOZWbr4xNcHInFbsctyTBgD5RdPOz73AmG/+
      +scrBB4B5l1aNsltqN/wIr3+2l04Jbd3W9Sm0mfTVZGlKuDSFrUtd2JPAAAOnklEQVSZyi3d
      AdkunB7PJ+zcSBkMprRlRwJXCSrn0l+X4541AIBgMAhd+xf9PSw1LlgmA7bNxQUh0IO2zSXr
      1ksErcRazzVj6DR97JkNkVewEtbM6LwNKyny3htdMidnsvSGFuSjQCsDLp1xi33xLIYGr9wI
      cGrMs8ijFDcyDF54e8VruacNAKD5Ix9hakEx6DIp6TQ8RKUkqxSDts2k63DBNAnNxY+8n+Zf
      KPNZqH9WWvtsNZKGQfDzn6eq6fbqo90NNHQ9yaiz/OJUl2C6gvGMZCwj55ViyhdPv+n6rPQ7
      7CnP5y8PpG9Om5TKrykmL/yMdDq1/Gfd/tfZ2MSrqug/dBD1y7eKBfkKodABIdim6fS7DhFX
      sGuuUMasUswoRex99MSF2BVnLgFnLb25CWi//klalhitNiKBUJisFgGmlz2mJmDjKME7Ix7i
      fkVzyCRlSQxNEfXOF+pNZAU7yhzetXaTlQrNNbGirRjxFra1dOCdi9hNJCZxbId4RcXmkka8
      XXY+8zSXLl4iPjmJpmlFI1BKEQT26AbdtlW8aTW6Tr9tMWTbVOsa5WvcKCsNcVirNOOUUiTb
      dvDA/fff8ve6W7l+6RTl9tCKrS+gu9guNIdt9lZYjGc1YppiIKUxkQFDg/0V+elpfrTQaHv6
      K/lpLSzZucRiZQwODjCVSFA2J5J8z0+BAAKhEMaRhxBCFAvnldaktcl7hkpp0g12GQaOgrNm
      jj57fdcFBTKVFXR95cubJj5ocmIM3v6/COnLB7+5Cs5O+pjIGTTNFceo8DlU+R32VZh4NIqK
      cY4CXSrKvA7jV08Xz1Fa/7l0t7i+vqHY+GHLAIrEm5pIaTeTJkp7kKRSBJeo+iBEXjGi0+MF
      BZn3tTJYhXB4w2kNrcRo33liLF0AsZSox2FbxCK6oHqMJmBfhUlTyKY/E+KS9z4y7Z/jktpB
      ed93Ge7vWXSu5Tomx7G3DKBA7bZt+H/jc4wvqPAghCDhOsRXmeboQpC7A+1frbPH6cPGGb00
      T2bl/ZC24Gdjlfie+De0fPRrdB4+QvkDX0DHITfZv+j4pdZZqWSSX/7jX2+tAUpp7uoi1tLC
      1R//BM/JU8TmvDNBKZl03RVDIyqk5KJl0YNiv8e7qNbt+0VskqkP5L1gVu/rsMqAJgBHiSUr
      0syYgr6kwQPlE1x/5T8w2vQIFTvuw6MJBpwKYrXz862DweC88HjHcXjzv/8xsZlztHkzWwZQ
      ihCCWFkZBz73AmMfeYT+v/8u1X3XGHMc9iyhB1SKT0q6vF4mHIcJ16FGW59b621s2PB+/wJS
      Sq4nNdIZD5qci9dR+SLXSkF90MavKwypqPbbnBjzEvW4hD0ulT4nryRnanSW5+t8dRjjOGPf
      46KZpvWhT5M8/BXKK2sQQuDz+QgGg4tK3Padf5dd5rt4AvlRdcsAlkAIQVVtLcGvfJmTf/st
      Zi9dIuU6q1ZEB4hrGpcsk0qtWHxlyfOvZVqTBGoOHry1i7+LEULQ0lBDk3Vp0WtK5SVPcrOC
      6ykD0wGvppAoBtM6w16dcq/Djuj8CFAJ4OanifUNjQghiEaj+P3+JTuObCZDhbx577cMYAWC
      kQjxB+6nqbePXtsmsszc1XRdRl2XlOsWJRRXM5W1GMGkJtm1QmrnRqTi6G8x88q/IaLNz98t
      lTzRJeyIWsUQBwVcSBiLMr0Kr8lQvmqnlJJIJLJs4weI1G4jdVoWq+BsLYJXIRAOY5IXwFoK
      Wym6bZuYlOwwDLxSkluHz1VKETp4cNNMfwrUNG1nsmy1Ua0gTZP/kQKq/Q5nJzzYS2yau7n8
      Tu9qjR8gGo2Rcm5GiG4ZwCqEysrIinxS/FIBC+OOQ62uEZISXQjKhGCl9KK1NujJaITtmyDu
      ZyFCCOJdv0baubWkngq/S23Aondm/vvGch5ibQ/N211fDqUUvcdfpNp7s4vaMoBVUEohFJRr
      kjHHZsDJB8ONOvnYoB7HplzMv40p8kFzKXfpuP3STZqlcFFYbW2Eoysnc2xU6lt3MlH9KCwh
      NnB1Wie9TKJX3J9fIL8z6mMwreeVqhs/RllZXo07l8uteF8TkxP4e74/z7O0ZQCrkLh2jSBQ
      LiR9joOrFDsNg6Tr0KjrdOgGAyUNXQhBl24QlPnjS5XmVuqdssB5Ibgai3J91y66Pvv8Hf5m
      Hx5CCKJ7Psasvfh+pG1RDHFYiKsUpgP1QQuf5tI9W0bF7seK99UpyRFeCk3TUHL+CLK1CF6F
      1OAQVYUYIE0jNrfI3T7nFlVK4bguly2Lqrk6ApoQRIVg2pVcNk22GQYaS+9I2sBwJIw6dJAj
      jz6Kz+crhmRsZt7PzO7shIedZVaxQIZHSzAycgN/S9ua3h+JxrgWagTzAjAXRnHrl3FvIa38
      eNxv2/gQhBdMdwrhEOVSMuI4jDoOTbqOVwgaNI1+1yHlOESWaNApKXGfeoL7PvpRpJT3VO3i
      eGU119wgAebr/VvOzQ2wwm9XwYVJY67+2M1jQ4bLtYHT0NKGEIJgMLjqmkmEalATeQOYsDZR
      neA7hZrbDU4rl0Z9+YWbJgR1uo6tFBctiz2GgRSCtKvQBEQWHJ8D9Oc+Q9uDD9y5i7+L8QeC
      mJFWyJ6Z9/dZR9Kf0mgMOZwa8xI0XCxXUBt0isW4C6QsSc5S+Hw+wuHwqqOmEILWj36V3mMe
      lNQp2/nIlgGshp3Il066lQmJX+bn+wowUOTU4oJxM14vu/ZurLKq64kQAj1UmV/8lODTFJMZ
      yXROY095Dl2CQmDI+fo/SimuVX2cQE1nMWp3LYTCETo/8TvFc907Y+77wDRNxOgorlKkXXdN
      sZ7XbRtLKXptm4umiQdQYrH7M6tcnDVkgm1mjPoDOGq+c0CXUOZXtJdZ+PSCDLpa0ongneom
      eervuXbp9MJTr0jpubZGgBVIjI8TSKbot212Gp5lFUJLd3Vb50SrHKW4oRSGlLRo2qKdX6Hr
      xfrE9yqtnffRfaWLyWvn6IxbSKFwXGhZYse3QEEuRQrBDnWZhObB37C88ttqbI0AKzD83nsE
      lcIB/Essrkp7koXuzhGlCOoa9SWVZwqkNY3a5z6zKdWgbwXD8ND0zP+MHopzbtLDmQkv26PW
      ohzpwr1LWjoXKj5Fd/BhlFKYriTX/jxV1e+/2MiWAayA9HrJqbWL1xeMIOE4TDs2lcsEz80e
      Okjz/s2R33u7hCMRgjuOsjeeY188R8zr5l3Lc6IBtm0Xf254d1Gz5xFyc9suQxWP0f6RF25r
      t3zLAFYge6mbMcchfos++RuOTZmm0WOZuAt2fRNeD9ueenLThTjcDlUdR5i2b04HS+9NwT0s
      paTRvMjIK39KZ+ZNxuwwjUd+47bv45YBrIDw+0mpfITnwk2spUqqQn630ougVtOp0XS6bYvM
      3Ouzuk70s88TjcU+mC+wQaiua2Kq9vHi/wvTSH1u+qjNraGCmsVuz3VyrkR/4Hcoi1fe9mdv
      GcAKGPE4QSnJuu48PR/btrEsa97vwo8LaHP5w0Ep2WV4GHQcplHon/sszQcObPX+CxBCQM3N
      KaFl5dcBpmliWRaO4xTlIGcdndmDv0/L3iPr8tlbXqAVcMbGqJIaQ7ZF81yGV6mejywZGQrR
      iFOOQ2jBbrFPCMaam3hkgcb/FnmUUqhEb/H/C+XflVJous6EKkM+8Du07l4/iZgtA1iGXC6H
      238dTQhs5tcNXi6wTUrJrOsQ0XTcksLbhEIc+spXVi3ddK8ihCC2/QH6L79Eoz9NxtWZ0Btw
      vVEc2wbdi6f5AerbDxJbh2lPKVtPZBlGhoaIzsww5NjUlyyCV5u+VEmN6/v2IqqryPRcRdk2
      TU8/RWSThjavF00trQw+++8YuPwmke0P0V7XUNwnWbiLvp7ckxViVkMpxenvfIf4uye5aFvs
      WiYGaLmHkkRR/gdfp6q+fsXjtljMnWzsS7G1CF6C2XSa3On3yN7CHkApPmDwxIk1a39ucZMP
      +n5tGcASnPrxT6gyTUYch8YV5E2WS77QFUixdWs3AltPaQGu6+LP5dBFvlCGdYsjgFKKgfIy
      Op55+g5d4RbrydYieAlUyZoou0oMaFopJg0dzeeDeBxf2w46H34Yz9a6akOwZQALkFLiq65C
      AeOOy95VIjYV4H3+OTr37VukQrbF3c/WFGgBrusy9dZxBGCs0JYL40JC12jZtg3PgiozW2wM
      tkaABeRyOXxTU+SUwrfMQtZUit79e4mOjmHEYptKvvxeY8sAFuA6DpdDQUzTpNpaWqBGB2oP
      HKB12zb8gcBWz7+B2ZoCLSAxNkbKdkgGA1Qto9IgheD0Sy/x5ve+t9X4NzhbBrCAqfFxaurq
      2JPNLavx6ShFXWsrh5599gO9ti3Wn60p0AIcw8COhInlTMaXSVofAh7+zGfu+ZzezcCWAZSQ
      yWQ4ceIEfZcvg2Mz5thsUwaekmmOqxSyumpr6rNJ2DKAEgzDyHt0cjl2aBo+16U0DC6HYvrI
      QzTff/9WaPMmYesplpBMJuk/cQK/bRP1GowsCGabamri4Kc/fU9JGG52tp5kCcePHWO3z88T
      Ht/cRtf8aY4+OUlibGyRbMcWG5etfIASMrOzvPGTn9D4+i9Iuw5SQcUCRYiEriM//gydjz76
      IV3lFuvJ1ghQwltvvsnLr73GMdsi4bpLyqH4HQfd6/sQrm6LO8GWAZTQc/UquuPwkKbnBbEW
      kJESPvNpdj6wfknZW3y4bBlACV6pEQUuzalALHR0znTuYcdDD265QDcRWwZQQjReTnZO6iS2
      YPqTlILo7o6txr/J2DKAEgxdJ6tpjLsul02zGPKcAfQvf5kdhw59mJe3xR1gywBK2L1vH0JK
      qg0DC3XTAARUNdSvWoKzoBy3lirwW9wdbBlACa7j4A8GedeyOK0U12yL67aN7rgMnj+/4ntN
      02Rqaorp6emtfYINhG4tE/N+L1JRWcmOtjZy0VHiCOKajhDQ7zEwRkfZls0uOwoopfD7/Ugp
      izqhW9z9/P88yI4I1nILEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='freedom' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dV48b6Xrg8X8F5tjsnINyHqkVZ+acY2MPsDjwLhZ7bfjOF77yF/CFP4I/
      ga9tYAFjD7ALe7H2rMOMcmqpu9U5s9nMmcVipb1ojTQ6I2l6NNVUS3x/wGDYJZLPW2Q9rPd9
      6q0qyXEcB0HoUPLHboAgfEwiAYSOdqQToFwuf+wmCJ+5I50Apml+7CYIn7kjnQCCcNhEAggd
      TSSA0NFEAggdTSSA0NFEAggdTSSA0NFEAggdTSSA0NFEAggdTSSA0NFEAggd7cgngNGssbS4
      hGbYr5bp9RILi6uYtoNt6qwuLVHRWr8oTjmXYmVzl9dnBznkUlts7mZxHEjvrDM7O0u6UP1F
      cd7FsQ3WlhYp1po/XEo+k2Z/1W2215bIFGuHE9+xSW6uspevvPEZlHMZNNMGy2B16QWzs7PU
      W4dzDlV+b4uNZOZ1fMdmd3P11fdSye+xupHEdjH8EU8Ah9lnz4gloszMzOE4gN3i6cwivV1e
      Hs8usfT8Gd5onOczzz44itkoML+RIWBkWdwqAtAo7bGerqOnV0lWmmzvZhgfHyceCbi0bj/k
      sDo/gxLpYmHmGcbLLzizvcqjh4+pm7C3Mk9NibKz9IyKbr//7T5AMblEXveSXJqj3rIAqOZT
      PL57h6xmodeKVAyF8fFx/Krr4WmVkyynNMziNtvZ/SRvVPOYShhvbZvVvTzPF3bwmiWWtjOu
      xT3iCWAiqVH6e/sJKub+L0Orgaerj+6+UVRLoyGpjAz0EfB9+LfSKNfoHx5hcPIUrVIKAK1a
      pndkghPHh8lkiiiWxbOZp2yli+6s2h9oGgpDA30MxVRqxv6yvtHjTAwkAMg0TE6M9jM0mKBa
      012PXy5ojE2NMtEXpdjcn4Ye6R7i9NQIEuAoCs1ilsePHh9KApYzZUaPjzMyOkajsv8ZB6O9
      9MY8pKsSA0qJwNBxRkZHaNTqrsU94gmgYFpNbNuiZb38WVRUrGYTx7GwLAvJtDBsG9M0PjiK
      xyvTaDSx9SqWFHwZxkNL09Bqdbz+IBeu3+TW9Wmye0k3VuxHHCxM06betPAqb2mjbdMwbXRN
      Q/W4/xPs8To0NIOaZuBTpR/9uzcQ5/qXX3LrTB/LuxXX4/v8MtVai5beQFK8ALRqeWYXt7kw
      PU04HMKsVTH0JpLi3mYrHeWT4vP5PFY9z/J2lqHJM/T6LSx/jNLOEslsiYmz04SMHLPLWySG
      JjkzOfRhgRyLuaePKDYsvrh2k3pul0RvL7NPH9GwfFy7coa558/Rmi3GTl5ipDfi7ooCjWKK
      J/NrRHtHODfRTbpsYZR3WFrZJJAYZfriKI8fzuGL9nD54inXf7nMZpVHj58hB7uYvnCcVKaM
      z64xO7eAE+zl3Klh1lY3MUyYvnmD4FuS5BdxDJ4+eIDm+Lg8fZliJo1sVHixlcPv9XLq/CX2
      lp9SaDicv3yFWMDjStgjnwDd3d0fuxnCZ+yId4EE4XCJBHgPy7I+anzbtrFt9wecB+U4zkf/
      DA47vkiA9/jYvcOPHf8otOGw478qJ1iWRalUOtRgP1et9uODPpZloShvKZMconbHFPHaF/M9
      g2CHcqlCJB5DBuqVIobkIx4JvnqG3mzi8/vfG9g2dXRL+aA6/dsGwYZh4PG4UwE4qHbH/BTi
      Obkc5t///RvL1D/9U6SurgPFU1UVSXK5kvQTMd+2ju/cKq1mlfv//s+c/NV/ZTis8+DuE058
      cZmwX0Fvmfj8AZaWFjh2/AReXwDJsWjqLXz+ABI2RquFpHhRHZOWKaFKOoZp41UdZmZXOHv2
      FF5Vfv0ax8YwWkiqF98h1LkFdzmFAtbf/u0by5Q/+ZMDJcBR8s4trZjd5diVrylsr5MY9lGo
      NLEMjQd3n+P3mDi952kW0qyugE6AyR4/yWyBlhwmaObRpACVeotbx6OsNwfQNh8QSgwx3Bdj
      Y2ODeE8fcU+LZCaPLoUIGhmaSpR60+DXN6fb+RkIHeydg+DV5TWS22ts7ewQ7OphZGSC/oRK
      V98Jzh6fRJYg2j3I+QuX8MktMpk9GlqdzF4OJRDm/LkLdEdfz5sZGR6mWa/jeCOMjo4xNTZA
      NrNHXWuQ2cviCUY5d/4i8bC3LSsuCPCOPYBj1gkOnObG2SmSyy8otxyCQR8eb5xq/i6PkjW8
      o9OEX/b//X4/Vl1DUlRCIT8+nx9J2l8uqSoBj0ytWMEwbZAVvE6d+eUtFElCllVCIS8+nx/5
      5WuET4DPh3TixJvLvJ/ej9fPOhJsWyazTx9QqelMXbrBUPwwZka+JgbBn2+8Iz8IfhtZUbk4
      fcu1RgnCxyYOhAkd7YMToFXJ8D9//48033OkvlkrkM69+wyq9fmHFBsme5n8hzZDEH6RDy64
      Z9Jpzp0ZZ3u3TETbQx6aoLm1SGhggJmZBXoGRvHUN1lIGtz6eprN2Vm8PcMMBE02Unni/eN4
      LBPHMkjnC0Q8BrML69i+KDevnKN9vUOhk33gHsBhaWmZdDrD2voKhq5jOg5GU8NWPAR8PhRZ
      YnB0kjPnLjKQCIInwhdnptA0DUmS2d7ZevlWDlpTp9nUsJHY20kiboshtMsHJYBZSxObmObr
      X/2GHp+FL+xlefY5K9tpLNPG5/dRymWQPF52N5fIlRuEQmEkyaZYrBAIBOAPik+lYhGPz49H
      go8/BUzoFB90Qoxj29hIKLKEZVnIskSr1UKWFRRVxWjpyIoHVZExWi1k1YMEKIqMZRqYloOi
      KsiAJMvYto0sQcswkRVlv0SGKIN+zvE+yTLo9yRZ5vt5dd/PsPP5Xh/A+uFjr8/3xmsV1YPy
      B1Ffv0d7ZwgKgiiDCh3tUKddPrn7b+j48EV6+OLscd62x7PNFrlyjb7uxGE2RRDe6lATwBPq
      4tKZ09y9/5BmvZeFhSXUaB9TcYn5ZAHHlrl47jjNpk5yY5F0roIa6eXiqYnDbJYgvHKoXaDC
      3ib3HjxECcTZXHpGsWGwtbhEuVqie/IMgxGbct0gXyxRrdU5eeEKti5uji20z6HuAaLdAxw7
      fpJnz+dQ40FGekbp8klItT0crwfk1/knKyqqoiDLYlgitM+hJkBvIsbm9g4nz12kJ+pnc20V
      zZNgYHAC2yfB0CSS6ifgHUWRHDwKTI5PHGaTBOENn9yFscRxgM8j3lE5DiD6G0JHc6ULtLv+
      gq10mWj3IKePjyN/QGLrlSK6N4RWLtHf3+dGsw7mu+/gL/7izWW3b0PE/et/CofoH/4B/vqv
      X/8dDMK9ez/5MlcSoNowuHLtBmuP/4Nsox9FM4gEHHRJxdSaFEpFEvEIkXgfpWKWqFclmcuh
      mV7OnBhjb3OZ1aU1Rq/9irDc5qPB1SrMzr657CNejU34QMXim99jOHygl7nSBWpW89y7e4ed
      mkrMU2VzM0ejmCZdLPPs4SPiPUPsba+hW7C2vkYju0nN00PAzJJK7ZDW/Jw/OYGExfraphtN
      EoQDcSUB/JFubty8xfFehUzVwrEtmo0GtgPdg+P0xPbPHbbMFlrTABS6u2P4vF4so4U3GMI0
      DTELVGg7V7pAIZ/Cowf3CEa6ORfvoaJssVf3MtIfxlb3R97DI6Mszj0n0TOAvyuC4pGgqw8l
      nKC28JxdW2Vs2Is6POBGkw7u2DH4q796c9kfTOATPgFffPHm93jA71CUQQ+gE8qSogwqCB3I
      1QRoVAqsrW+imz+niuJQrzfcbIYgHJhrCdCq5Xgyv04o6EVvmdTKBXKFErbjoDVq5LI5DMtG
      12pkMlkMy8G2DHLZNPMvll8+zlDT3L8DoiC8i2tzgXLpNKPHTtHfGwYsVl7sUiyXaIyfZW3h
      CcP9CZJlkz5vnXy5yk6mTMAqIgXj6IZFs1Zmby9NtrLBH311XVwVQmgL1/YAfq+HekPb/0Mv
      s5uvYxktKrUGif5hThwfR7Ja7KUyWI5MuZSj6aicPjFFPOQjl0mhmzb1YpkPv+GpIPw8riVA
      1/AkRnaVO3fvkq05KI6BLXkIBnyEQ0GQVMJBPx5VRtdbRCJRekMebt99SN2U8Hq9tPQmwXBY
      /PoLbSPKoAfQCWVJUQYVhA4kEkDoaB9cBUouPmJmu05EdTg1fYu+yC+7OUJle5lSZJixePCn
      nywILvnwMqjq5cLls4zE4dHMIo0QpApVor1j2MV16pYHxxtlxKOxrpnU80W6okHCgyfoUats
      JLMEEyP4m3kKus5QvAtDrTKztcG5C2dRxUhYaAMXukD7Y+iVlSUkSaKlt/AEYkxfv0nYa4Lj
      5dL1G/Qmurk2fRHbMqhV6yAppHa3sSyHc5evEw/A0/sP6B4eFxu/0DYfngCWwezTh9y584SJ
      U6cZ6O/HsiXCkRCSJCHB/ij/5UhfevV/h2qlhqSoyJKE4vHj9SiAytWvviK9No9mHNnClPCZ
      EWXQA+iEsqQogwpCBxIJIHQ01xKgWdrjX775hnv3H6FpdfYKtTf+fW9zjXztp2d6rqytutUk
      QfhJrs0GtU2d/okznJ8ahHqWbc1DZe4plbqOLz5A1K6DZbH24hmZYpWJc9Pk159R1y1iA5P0
      +1vMr+9S1iyOTx1zq1mC8F6udoHWF2a4d3+GltmgUNPRLJkrV6dBq+8XSx0b23FA0lhb3sWU
      fVydvkyzVmEnVeDa9RsM90TdbJIgvJerCTB5+hI3rl/i+2PCkiQjy9Lr+wIYDdIVg6GBXmzT
      QpJlZAkkJCRLZze1S6FSd7NJgvBerpVBbUOnaUsEfV4wdWqGjOwYBIMBGo0miuQge3zUSzl0
      FEL+MLJsEwz4aTRb+BSH3XSecCxOV3T/okaiDPr5xjsqZVDXxgCyx8erWTyqj7AKsB8wGAy8
      el68p/9Hrw0G9u8pNjo64lZzBOFARBlU6GiuJoDj2OxuLHPv3j02dnNv/Jul18gUa+94pSB8
      HK7eIEMrpdgpO1y7fo2mplPJpVBig9QKKRKR/dMiM3tJ8tk0vq5RxnqDzM8vEBuYZDCmMDu3
      SHxwgqmRNl4dWuhoru4B6uUCiYFhdlZe8Hh+iWJ6k1oLdna2MepFkvkquztJRo6fp5LZYXHm
      IZlKg29v38G2TGzH5vGjJ1huNkoQ3sPVBAh39ZLeXGf42BkUUwNJwjJbVGuvS5uyL0gk4MWj
      epAUH+evXOe//effsLa2yuSZi/SF/SIBhLZxtQvkj/ZzckTj4cOHjE6dojcEz+ef0Tc0gSec
      YNijIMX2Qw4MDhCN+Jmff0a5a5iJiUleLC0yODGBuF+80C5iOvQBdEJdvlOPA4gyqNDRXE2A
      crHIuy6L26hWaBo/3buvVCpuNkkQ3svVBFhbWsF0HKrFLDupDJZlkNzepFxvkk1uUmq0qBQy
      bGzuYNoOtWqZ5PYWNa2FY7XY3txgZn7RzSYJwnu5fqNsq1Xm+cIWk5MjbC7MUTBkiis7HBuI
      Ag7lYolqJcNzzUMzO8/oxCQLy+tEnCre7mGUD7nFpCB8INfHAI5ewd81wkB/L+ViEV8wyNTU
      +H4gUyOZK+EPBWiUKoS6ehgZGsCrSOiWwujQAEH/L7u+kCD8HK4mQDzRhScygl/b4PHzBSZO
      naKSzVBr6AQjMfw+PwHVoVK36EqEiUVjICnEohEG+6I8ePCAli2KoEL7iDLoAXRCWVKUQQWh
      A7mcAA6mab58aGOYFpZpvv/+v46DYZjuNkMQDsjlBLB58ujp/kPLoFLTWJ1f4L3XgnBsKjUx
      TVr4OFwvg76il1lJasRaNZ48uI+uw8UTgyyuJWnaCucHY8zuppkcnyKdL+GnyezCOprk5zc3
      L4u7xAhtcahjAAcH2Rvm8rXrDMYU1lZWaJjgkRUsB46d/YKJgS4cx6FaKWMhUUynxT3ChLZx
      PQH0ao67d++Sqxl4VAVVMXh89w7Flo+pYxPItoEn4MejevH7VEDC41FptXRAwn/AW9wLghtE
      GfQAOqEsKcqggtCB3jkIrhTzeEIxAl6VajGHFIgT9v/h0x0ajeYblz0Rjj797/4Op9F4vWB6
      Gs8XX3y8Bn1E70yAxfkZ/H3HuXBilJk7/0Ls3G851e+nphnEYjEkx6RcKbK2nuPyxROUq1X8
      wQh+r0qtUsaWVCLhIPVqZf86QUEftUoFyeMnHPBRrZRQfCFUTGoNnWg8jmMamGYLjy+Eqog6
      0GEx/vmfcYrFV3/LXV0gEuBNvmgPVr2EVfegRIZRJMjuJSlUKuykB5G1beRAFK1l0KgUSO5m
      KdZbnO4Psl620Aq7XLz6FXvb26RzZS6eGWVuLcvA4ABxamxULPp7+lCNMoVKle10HCu/gR3t
      5/yZ0yIBhLZ4zxhApj/ocG8hy+R4LzgtUqkcLcOkkM9hSj7Onj5BLOgjl92joelk8wXSJZ0r
      l87Rn4igVfPkyg20XAEz2ktPxEM+V2C7UOfS+bOMDXWxl8rQbFkUCln8kW4uXTiL3yOGJkJ7
      vHMPEAwG6RvtZfn+AtFQF5rhpaVIGI5EOBIk5qlx595jFG+MLlXFsnQi4TCTo93c/o/vqFWL
      XOkfB8fEFwphN+vU6hqOGuLMsRHu37lD7/AoqizRtB3C4TDBkB9xOsDhk48dw6lWX/0tJRIf
      sTUfl+tl0Fp+l+dLW6D4uXr1C37Jj7kog36+8Y5KGdT1qRDh7iFu3Rpy+20F4VCIzrbQ0d6e
      APUs/+P3/0TdsHn65CGG9WYvaX19DYDZuefvfXO9kuXZ4tpPNmLl+RzaARssCG56RxfIYXx8
      iLW1bWzHxmpWmZl/QbNpMjYxwp07d2hJfmqFPe7fq6GEehmO2Gzs5vHF+4nINfKFBmMTIziO
      Q3p7hfWdDMHEMAEtQ85wsCwvF0/28WxunWKhRv9kD//v4RLx3kEunzve3k9B6Fjv7AL5o70o
      jRx1w6GY2iZX0ZBlG0+kn+PHj3FqYohQVz/Xr9/EQ5Ol5RWQJJpaA0M3OP3FVRKh/YltjXod
      R5LZTW7hyAGuXLtOT1Ahk85y/vqXnJ4cRlb9hIN+ZJx3XltIENz2njGAxMlTk6ytbhHt6cUj
      Oai+ICG/h2Ylx9JG6o1nD/X1YtgO0WgU2evDr37/1g7lYgVFUZH+4NywcCTAk3t3WN5KYZo2
      YFPK5RHnhwnt8vYyqOO8/zTGH74BHPi5r18kwXuqr9+Xx0QZ9PONd7TLoJL0s87I+qDVaOPK
      C8K7iDKo0NF+lAD1zCbfPnmB41gsvFg6wFs4bK/Mc/fuHf7PN7ffOYBNb61TqL/39HgA1tbX
      DxBTENzxoy6Q2dSRzBqZika1UsFolHg2t4Qc7CLhlxmYmuTZ3XtcunyB3bzGxHAvo8fPEvAv
      U5ISVDI7LK3vkBiaosfbZGF9l66BcfzNGk7MYn3hOelClanz0+Q3nlPTTOKDk/T7DebWdihp
      FlOTkx/jsxA60Fu7QCOTx9hZX8MBVhZfUNdN8sl1cDQ211ap6grbyV0caf8yhmazwlbeZGqo
      i7nZWSzbYXN9A8OykbBZXVrdHyg7DrbjgNRgZWkX3VG5Mn2JRrXMVjLL9PUbDPVE27f2Qsd7
      awJIniCDEUgVNSLBIInBUc5fuEDf0CgLMwtcuzLG4tI23T1xHMfh+ZOnJHoTlMo1gsEwo5PH
      OHt6ip3kHqMTY6jSy6qSUWevYjI63I9tmsiKgiJJSEhgtchkM5Qq9bc1SRAOxY/KoGZTw1J9
      eCSLXKFCX08Xu9ubOL4oQ31d5PIFeroT5HNFunu7wXFIba9R121UX4jRwQTbW0livYME5Rap
      fJV4PE7AIyN7/dTyaTRJJeqPICs2oWCAuqbjUxy2dzNEuhL0xPf3AqIM+vnGOyplUHFViAPo
      hA2yUxNAlEGFjuZKAtTzKRY3U4DFznbqJ58vCEeFKyfENIo19nJZhga62E2mGRrsYv75LMHe
      Mcb6AmSzVbSWTijWQ9CuUldi+OwGXq+HxcVlEkNTRLwW0a4emuUcSqSXoEccKRYOn2tdoMmJ
      UdbXtwFYeTFH39Q5WtlVMvkcM0tpxsYG2V7fYGs7SSq1Q3IniW3v3zXy0eNHeFpl1vYqrG3s
      4FXFxi+0h2sJ4I324mvlqegWDiDLErIs4SAxMTWFqvjxOxVa/m48Vh1L8rG3vsrQiTNEgx6i
      g1PUNp4gR/oQ27/QLq50gULd3Tgele6TZ7E28hyf6md29jnB7nH6EyH8zf3zAkZHR6mpCQIt
      CcM/SIgSC8vLDI9OgKQQCgZIDPS60SRBOJAjUwZtVnKspqqcOTn56tIoogz6+cY7KmXQw7tB
      xs/kj/ZwLtrzsZshdJhfPAZwHIf1pTleLK7QNKwPeQeqVXGLJOHjcGUQvJvJMdAdZObZAvV6
      HbApFsvYlonW1KkUsyRTGSzbplGrsJvcQTMsLFNnN7nN3IuV/cc7O5Rq4voQQvu4kgCObWNZ
      Nj6/j/UX89Sqaf79u0fk82l29orkczn21udZTRd58uARpm3w4sUKC7MzNE0Hx3HQG1WKpSIP
      Hz/9+adYCsIHciUBtFqJe/eeMDI+yuRIhLtPUlw4M8L62hbx7giZTAGvKlGuNoh1DzA2OolX
      0mmhMjk2QtjvJbu3i4WKUauLe4QJbeNKAoyfOMvvfvdbdtdX8fZMEpB0xob7aclBuoMeVNlG
      s2SiQT+RaBiASCRKf9TP3XuP0FEIBILUa1VC0ai4Q6TQNkemDPo2ogz6+cY7KmVQMRtU6Gju
      DIIdm5auY5jWgQewlv0hJVNBcJcLCeCw/uIpT5/P8Xx++cCXNZyfn/vloQXhF3LpSLCDpPg4
      dmyCjaeP6D53gdv/+x/56o9/zVaqgKoXKdYa9I6doZVdo6KDqXjYXV9ga6+IHEoQtnKUmiqG
      5OU3Ny+70yxB+AmudIEmz1zm1EQ/z+7fo3u0m+XHzxmcOsHG1ibhcJS1zQ1kxYOtVzA83dy6
      dYN4UGV1dRVHksCxUf0Rrly7QVf4yMzOEDqAKwmwvTLP3MIKeIMEYsOk95KcPjnC7maG/oEE
      A719gEwgHIfGHvcePKSmO4yNDGNYNsFAEEVRkABFUdxokiAciCiDHkAnlCVFGVQQOpBIAKGj
      vTMBWo0id779lu+++46i9uOavVYtUa7rpFIHuwrE7voKuepPXxx3aWX5QO8nCG54Z8mlWS1i
      +rr4cvosaHmWt8HT2MEOj6O28vh8Pgw0vvvXbzhxYZr+sMzGdhJ/zyQ9njrJTInx0xdp5jfJ
      F1skoiqybbE6/5RMscr42avkVp+gmRDpm2DAr/Nic4+KZnHy+Il2fgZCB3vnHiDaP8nZkRD/
      8c3/Zc/wUcnsUNMlaqU0hXINx6hjyCEmjx/jyoXTDI1PEonEOHNsmIWlRWTFIZXMkssU+OLa
      FTwvy52WDZLSYmMlBf4IN65dwdRq7GYq3Lh5i+G+WDvXX+hw70yAZiVHpmoxkAhRb0p49QJm
      qAelmUIODLyasSnbBtupDEszD2kpQTRNIxpN0N8/zOhwN6FYHO/3UQyNTLVFb3cXtvXDbpWE
      bDdZX18nXxJnhwnt884yqG2bFHN5bNVPT1eUltbAVn1IhobkC6PYLWxZRTKbFGs6Ptmm3mwR
      jMQJeRzypRrxRDfYJn6/n5beRFa9aNUSBgoBbwBJtvH7vDRbJh7ZIVcoEwiHiYaCgCiDfs7x
      jkoZVBwHOIBO2CA7NQFEGVToaIeeALXCHvfu3eXZi1Wst+1rbJO9TP6wm3Go7L/8S+zx8df/
      /fmff+wmCW/h/P73b35Pk5OHf12ghcVlTl+6jl92KOwlifQNUUmn8Pv9lOslUCJIkoNeLzI7
      t0y0f4wT4wOH3Sx3aRpUq2/+LRw9pvnm9yTLh78HOHfuLIszD3kyv4pkN9lJ5Uims+ilNKmK
      zVBPiJ29DLZl4WDzbGYGcaqM0C6HngBay+bK9Vt4WgV8iWHyW/MEor1IeBgdH0J5OQ5aX1tj
      6sxFEgGvSAChbQ69C+SRLZ48esjA5HnCfh9B1cPQ6CDeZhXb5wUFpkaHiPoc5peXmDh5kk9t
      QrT0Z38GX3/9esHo6MdrjPBuV64g/c3fvP5bktpbBtVKGbaKJqcmhw70fFEG/XzjHZUyaFtP
      vwrE+zgVb2dEQXi/D06A7dV5Uvn9aQsnz08TD35gx8U2SefL9Pd2//RzBcFlH5wAI5OnaVXu
      Ezl9nZjPZnNtGTmYYKQnRCZbpKZbjA33sbW+SsvyMHl8lNTmJv5YH4NxL6l8BU23mBgdwOfz
      YrU01je2iPUO09sVdnMdBeGdPrgKJMkykiQhyzK20aSu6aw+e0i+kmVuvYBZy1GoGvT2dJPN
      57D1JlqzxbNHj9FrKZ5vVzBqGbL5Cgurm+jNOnqrxaPHTw58aRVB+KVcKYMW0ykM2UfAY6K1
      JAYGh+mKR8GxSadSnL88TSmzi+0J4DNNdGBgaIR4PAL2/ua+l9zBE4ggGwamG40ShAP4RQkQ
      SfTgkyEci6GVCyihBKFAkFjYgz8YRrHr7OzlWXo+iycSpVbKEehK4PFG6Aoq+IMR/H4fvYk4
      sXicYj5LrLtbTFAS2kbMBj2ATihLdmoZVPzYCh3t0I8DmK0m5WodAF8gRDjoP+yQgnBgh74H
      sIwm+dQy395foNpoYtsWhmHgOA6OY2MYBpZl4zjO/mNb1ICE9jn0PYAvFOfk8XGKlslgIsj9
      u7eRVJVA1yhSbZu6IVNteTg14GE7p2FYMl9+eVXcLV5oi7aOAaxmFTk2xLXrN9HKe5hygOvT
      lwj7VfJljelr1xgKOtREHVRok/YkgKTi96kogRheLcPt774lMThFQDK4fe8RpbrOUH+C+3du
      k7MDRMUFooU2ac+m5uvl0un9hxev3nq1eLOeRKrpDAz00TsyTu/I8bY0RxC+9+o4gGVZlEql
      j92eN9RqNcLhN+cFWZbV9kuotzumiNe+mJ/cgTDTNFHV9vaR2h2zE+IpitLWA2HvWsdP7kCY
      LLe/ye2OKeK1L+YnN9w8Sh+eiPdpxHtfzE9uDyAIbjryewCjUeLO/SeYFkx//eEQNNoAAAKx
      SURBVBtiPplmdZdv/m2WRH8fl764QMDj7oCqkNrk9p3HfPVf/jtd3v1lizP3yFZbhLvHuHRm
      HDd7r1olx7ff/CvHfv0nTCUCAGzOPma93CQW6+XS+ROu/lLp9QIzM4vozQoTl/+Y0S4vjWKS
      u09XQPby9dc38CquRuTxncc0TZ3YyGnOTQ6AXeWf/te3xPt7OHnuIomwz8V4UEhtsLixR0M3
      uPXlVwS9MsmV56zuVVD9cW5dPYfEJ7AHqBTSjJ29zm+ujLO2WwbAqNeQAgH8wSAeV7+ofdHe
      YU5N/PDEfZO66eerr77C0Qoc+G7gB+QNxrlw9uQbX4ZmGXhkiWAo5Gqy7cfr4uqNawx1x/n+
      zbM7aS59+WvODUbINgy3I3L55k2mRgZQ5P2AVr2OHfCjenz4ve7/Dnf1jzA+1EcoFGA/pE2m
      YvD1V1/Sozapv7z2zpFPgB/6fkMI95/gd//pa7rsCrsl96/Cpqoqrm9176Go6ssv6XsOpy5e
      58ubN9BSa64fGXdsg9mnT/AOnGQ0/nIX9yr+4RQF1+afUibCybE+AORwP7/77R9xYjjMytru
      IUSUkFUVxbZpWW/OL/vhGh75LlA0McDc/fusWXD1VxMkd5OEFYu5tSRaQ+fqCffnsW+vzPNi
      eZVoM8DVC8NoVpCQp8l3331HuGfM9eQopDaZmV+iFa4Tu36epqZjltPs5Mrothe/yyXzws4y
      6+kyDWORQPAyejVH7/AA927/O47i5etjLn+mzRwP57YYH9PZDgRQbY3usI+nc8vousaxc9fd
      jQfsba2wmSrSaLawWhp7VYO+mIdvv7uNGohz8uVn+skdBxAEN31SXSBBcJtIAKGjiQQQOppI
      AKGjiQQQOppIAKGjiQQQOppIAKGjiQQQOppIAKGjiQQQOppIAKGj/X/Ft+CDBLMECgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='gdp/generosity/family' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='increase or decrease' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAY50lEQVR4nO2d2Y9cV37fP3evtReyua+iJJIakZIoZyRlxjMD24E9SAJ4bMQJAhuDAIH/
      AyOPQZ7ylMc8BAgCA4HhvCRIAiPJjCNbMxpFI1EURYr71qS4NJvsvWu92zl5OLcWSuwyxepu
      Fnl/H6BQt27d5VT373t+59xzfudnaa01gpBT7GddAEF4logAhFwjAhByjQhAyDXusy6A8OIR
      rd7nZ7+e5mC5iR7fwc2v7mF7RY4fmOST0xd4791jfPCLL/nO33uP99585ZmWVTyAsO741R0k
      y7e58qBG/daXLEcWpVKBW9PTNJdnmVuqMbbrCO8+Y+MHEYCwEVg2b76yFVXex1vf+xGltEWp
      VMb3A7bt2sf4+CT7927DetblBCwZBxDWHRXx4d/+kmN//0dsKfvPujQD2RQBaK1J0xTXlS6H
      MFoMbZE6TWiFEQBBoYhjWyRRSJSkeH4Bz5VWljC6DG2dadTi9u3bfPKrD1mNjDM5d/Y0t2/f
      pt6Khi6gIGwkQ3sAt1jl8KuHCGPFZMHoqVQMqK0uU9kaMV72UUqhlCKO46ELLAjrybo0ymdv
      XmPXwVezT4rdB45QcFucuzrP3m1jWJbp70sfQBg11sUineoU26s+adxmpR7RXp3j+nKTw0eO
      rsflBWHDkKdAQq6RRzRCrhEBCLlGBCDkGhGAkGtEAEKuEQEIuUYEIOQaEYCQa0QAQq4RAQi5
      RgQg5BoRgJBrhhZA3Fjm9OnTfPTLD1hqpYDm7vRlPj35GUsNCYgRRpuhp2d65QlOnHiLc1+e
      Z7zoADGLdc07bx/h/NUZJl47QGfCqVJq2NsJwrqyLvOTGwt3KW7dk7kTjW3ZYNlYWqOzlxi/
      MIqsiwBm5hq8fHR/FhATU3TbnPzsPAePvolt210RSDyAMGpIQIyQa+QpkJBrRABCrhEBCLlG
      BCDkGhGAkGtEAEKuEQEIuUYEIOQaEYCQa0QAQq4RAQi5RgQg5Jp1EcDK/AwXLk/TmfA8P/MV
      p0+fZm65uR6XF4QNY2gB6HiVS7cWObhnO51ppTNzS7x+7BhT48VhLy8IG8rQ06HDh1f44GqL
      rU6dA6+/y/Yxj5nbN5hfWMAb38+Rg9u7KZI6mWIEYVQYeoJ+MLmLinOdqYkKcRITRilKe2yb
      mmC+kWDbtqRIEkaWdQmIqa8sUo8stm8p02yn2GmbhVrI7l07cGxLAmKEkUUiwoRcI49BhVwj
      AhByjQhAyDUiACHXiACEXCMCEHKNCEDINSIAIdeIAIRcIwIQco0IQMg16yKA2uJDrt643Q2I
      CRsrXJv+ilRt+DQjQRiK4QUQ17h8a569O7ZkAlBcunydLSXFla/mhr68IGwkQ0/PDJdmmKs1
      OfPF57x64ntsqyg8f5ytO3Yxe/4uSk11A2LiOF6PMgvCurEOATE7GS+02bdlC2GUkCQuSbTM
      g7vgVMclIEYYaf7OeIAojvE9b+BFVhcfshJa7N42Rr2VUHQUM/Or7N+3G9uSgBhhdBkogDhJ
      +I//+b/yL/75TygVC099ExGAMKqs2Qn+4twl/vwv/zuXr93kf7//4WaWSRA2jTWrZM91uXjl
      Bv/od3/I7/3W9zezTIKwaazZBDp38RqTE2Nordm3Z+dQN5EmkDCqSFC8kGsGD4RpzYOHD2m3
      25tUHEHYXAYK4NRHf83//Ou/5d65T5mRZT6FF5CBAqhWKqzOzfD+qatUBg8FCMJzycBGeasR
      8kd/8i/Zu7WKI/NGhReQgWZdCDT/5c//E3/xF3/JUmuziiQIm8dAD3Dwtbd462GTyo5DTMhK
      58ILyEAP8NnJz3jrvR/gLV5jprFZRRKEzWOgBzi0dwcfvP8+thPwlngA4QVkoAdYqCf85A//
      gO8e3kE9WuuolF++/zPOnL1AlIWEfXnq15IiSXguGOgBXFXnr/7qf9FaWeYPXnvn8QelTSy7
      QqIUdicBjAUqTbFsqxsMIwExwiiy5lSIVm0ZgioLty9xp+bw3onXeFyCI61SNDbzt87Snnyd
      /ZMuaaqwdZ3T5+Z4+62XAUjTFMdxNvK3CMK3Zk0PcPbM5xx754d8+MkX7J0scv/Ia+wuffM4
      Hbc4c+EK2g44vjdlcanJ0uwdFustDh09jpUFxACSI0wYOdb0ALcunOTnv/yU4z/8CYXFKxx8
      7x+wxX+6m8hkOGFUeYLZoJo0VUM1X0QAwqgy8CnQ4oP7rK4u8Dcf/JpElvgRXkAGVsnnL35J
      WGviFxxm6rC/ulnFEoTNYaAHOLx/N3rLHlx/kh2VzSqSIGweAz3A9Mw824k5f3eWl5o/YE95
      s4r14qGaixBl80ncwLzbDpad/QtsF2wHLBvLecqnDcK3ZqAAdkyU+PjqAu8ee51qsFlFevHQ
      KiX88N+hHl4yn9MI0KAVpIk5qG+fTrMBQ9vpicEJwLKMQDoCcjywzMMJyw3Ass3LNedYtm9E
      BeAVsn2eEVvnfNsBLCw3W/bGze4D2T4rK0cWENI5v78clm2u1TmfbDG0b5TTwvI64nd74u/c
      u//3bhIDBbBzzz7G7jUY27KdgoxhPT2WTeFH/woNYFnGmKzH/UG/Nk6iU8jEoNMQdEc0UbYv
      ApXNP+n7Xieh2aciUKk5Ns7CWlWCVpnA0jj7XkNivtcqgSS7Z3sV0GjVKwcqARWjtYIk6paz
      K9okpCvkTjnS2PwWDTpp910nE3/33n33cX0sK2uhu4H521gOOJ4Rl9Mnvo7g+/+ujp95U7cn
      eNvDygTfqRAGCuDUmfMUfZuVexcIJ/ZxYGzQ0cKaaEX7g39Leu9zUKkxXJ0CVq/Gs51uEwjb
      1KaWGxijtizzDwVzvEXvuM55gOU8xgs4vjEK2+3W0lbHoByvrxYudr+zOtfolM31sazsPrb3
      TS9kO2D11d6ZF3nE23QGQS2LrtC729ajxwCo2Igd24gbjOgy8ZNE3QFWIyANaSZMyCqEzMN2
      KoFuhaAhNtccOA6wNDPN//j5LyhP7uYPf//HuE85kCvjAI9Ha93956LSbo1oBKKNESgF6KzZ
      RFbrdjxBbL7r1MRpaAygv3ZOI7ROzfW7tXQbnRlMxyC6NXPS50k6ZUsic82O9+i7vvFC2fUz
      z6KTzPhU3DU++vs6naZcR2jdWtvF1PT0KoHueVnlgNUTn+2Zc7r9pl7N/shxbiG7Z9aU66sM
      Blrk4vwDNBat1XlqbZiUKdHrimknf3PJyRdtwogReiZIlWTiSI0w+/tBmciM4DvNtN55uiOm
      /mZUp9bvNAuTzLv2VS46afdEHdVB9wQ/WAD1iB//w3+M79jSCRaemkc6xPQMaRSEPnAcYGqi
      zGef/ppPPj1JU2YyCy8gawpg9qsrNFRAuVSiXC715vp/A8X9+7N9nzV3vrrF6sIDHkpAjDDi
      rNkE2nngCEunPuDuzCwal3d/sMaBaYMrF64yO7fE8eOv4VoxK6sRe/dt4/alWabGDqK1RilF
      kiQb9DME4ekY2AdYaSZ89913mLtymi8uTfPd1w7hf+3xtbbK/Oh3fsDD6bPMLMfsn7RQKoE0
      QVkOlmV1YwIkIEYYNQYK4MCB/Vy+cRd7YjdWfY5UHYKv2bCKGpy5cBWFxxv7UhaXYqbGXE5+
      cY2jx96UgBhhpBk4DnD245/z5c0lonbEP/3pT6k+5fKIMg4gjCoDnwK1QsVLhw6yrRjz/06e
      piVNeOEFY6AADr38Mvdv36TpVNkxXh7wJEgQnk8GCuDatWvUwogxz2L/q0cIpA8rvGAMFMCW
      HXt585V9PKyH65BSXhBGjzV7pfdvXebe7Bxaa/bu2Y0nzR/hBWRNAYxv3cl3/DFOnvyYd979
      vjR/hOcOrTXtKKEZxtRbMc12RK1pXquNNrVWtLYA6svz3Lh1n9nZB0xP32R8aheeiOCpUY15
      MxORvvn40IvEgmwOv/VMIqNGHa01rTCh0Y6ot2Ia7YjlWptGO2K1GVFrhqw2QmrNiJVGm3or
      otmOcRybgu9SLniUAo9Kyada9BkvF5ioFNYeB1h6eI+7DxYBsCybV46+TuEpH+PnfRxAq5T2
      //3XvZDITtQUZBFUPBrp1T93vz8csT9IpV8kWaRU95hHQiKz3pvtPhpo0xmUdL4WeZVt94TZ
      P8feHNMd0OyETAKWV+y7TycIpi9wpnt8X/gm0E4dmmHCSiNkqZmy0oyptyIeribU2wkrjTYL
      TcVqI0JrKFWqjJV8ykWf8UqBcsFjvFygWvIZKxeoFn0qJWPg5aKH5zgmFMCysp/8aFv+idKk
      mkMsnnYgN+8CGAadzXnPPjxeJP1hjlr3RKXi3hz6r4Ugdv/tnXBFgCTsRVT1iVTHfemBsmOU
      1qiojVKKKE5p1FdZaYTU6k1q9QZKa2w0nmXuaVlQsBMc2yawU0q+TbUUUPV1z646c/nJ5vWT
      lSVu98rSiQXoj6aDvunWVl8F4PaCbey+uGWrtxjBEwng81/9jIO/8WO2PmZt0CdBBDC6KG1W
      /kuVeQ/jlFYYG2NuRqw229SaEfVWlDUxQuqtmDBOaEfmFSeKatFnrBJQLQaMlwPKRY9ywWe8
      ElApBt1aeyKrtT13uPb0I+GR0BM9ui8mui/KrhtB9+j+gQJ4cOcGV2/NADC1+yBHX973VEEM
      IoDNQWlNnKSkqSZOU8IopZF1/FabxqDrzZCVhnnVmyHNMCFJU+JEESemZi/4LuOZMY+VA6ol
      n0rRf6R50WlXFwOPYuA+t/O8Blrk9RvX2bbrJWaunOXs/fts3b2P7RIW+a3RWhF9/O9RK3fB
      K2B5RSy3CH4FyyuAE2D5JXALWH4JyyuBWzRtZdtFWQ7N2KLWSlhupSw2YpabqXmS0YyMMbci
      Gu2INNVoNEqZeq0UeFSKfmbIAZWiz97tY7xeDigFPtWST8F3u6/n2ZifhoEC2L9zig9PnyGO
      Et48doTiGpPh2qtz/OLUZX782yZo4OKZz2grh32HjrJt4inbTS8QlmWTHvwtmnO3aTdrtBp1
      6gsrNGq3WFleIWzV8QnxSQismIIVUbIjyoFNpejjew7tMEYnimKSsDNVTKWKUHuE2iO2i5TL
      ZSoTkwSFEkF5jKBUpVCuYHsl00H1YiwvxfIs8FywI9M8dgBHZ9sWf4dJvHAM/LXtOGFsbJzj
      b73NgT3bHt/80Yqr0zNsn+wtG9cO2+BV8HwXpVQ3ICZN03Uu/vNBqhT/4aMa0/ctHHscx56g
      VHiJUuAxvt/UzBOVAKfgU66YWrpaCghcm4IHvgMVlfTW38nasDppQdxCRw3TOY0aZhWIqI6O
      W6j6Amly1xwTZ8fGTYhbQLZ6RPay+rdd33glr2C8lBNgBWXjlbwieEXzlMivmGP9itnvFozX
      csz5OJ7Ztj3TSbVHT1wD+wAqiTj9yYf87G8+4k//7N+w4zFLI9YeTPPZ1Ycsz83ww9/5PabG
      S2ZFj2iJM5cWefvNl7sCsO38TqgI4zQLCrJxHfvZB4R3VmDQyjx5UZ331DwlSiPIhESSiaoj
      sLgFSQsd1jPBNYy4kpY5L81Wa1CJ+V6lWYfVAr/cE1GnKRiUsdySWX/I7wmte5xfNo9fbc88
      SvUK5glQ55jHLjL2ZAwUwPXzp1hMSrz+6n78QmXgQNj09A0O7NvDSr3NwswdlhtN9r96jB2T
      ZekE5wit+z2L7i1R0lnyMWr0PFfHM0UN45n6xdQRWZ+HQyVmfxqbx75JO3tEihGFW4SgYsTR
      6V91RNYRUubNLCcwYlxLAGFjiY9/9REXL5+H8UP89I//GVXJECM8I4yZaiMmdDYsoLti63ml
      hlkgrE9Ig5qKa1rkuU8+4Mr9Nsdf2cfWd/4JFRmZF54hVraMou4MiGFEoS0HjUZ7PtobQxcg
      jBPiWBHGCVGS0gwT4iQljBLCOO2OXYR+MrgJFIcNznx+kuk78/zu7/8Rk99cxOyJEA+QD7TW
      pv+ndXc7Vaq7TymdGaUijIxRdo0zTmhHaXd/GKdEiRmUixNFOzPeKE5IUk2SpiSpIkoUSWpe
      cWL2BZ6L55o5QJ7rUArMe+C5BL5j9js2ge8+2UjwevxhRADPFq111whTZQw0VeZzZzQ4jNOu
      8RnjjLMBMmOoHeNsZ9+3QlPDhlmN2grj7JrZyLLSJKkZXEtShVIa33PwXYfAc4xxFjxjrJlx
      GuN1KPjZ94H53hivS+A5uI6N7zq4rnn3XBvPNdf1v+WMTbHIEaEzHaHfYFJljCZJdbeWDCNT
      Mz66bYywU0t+vUaNMmPVWveaDlqjNGjVGzjzXGN0ge/gOaam7GyXCl53e6zkZzVqdkxmtKWC
      i5s95XIdB9ex8D0H17ZxHBvfc7BHbJBNPMAmoJTm/3x6nbtzq8ZQ46TbHjU1aNo1SnjM8jEW
      uLbdNc5CVhsWMoMMMkPt7PddG98z3/fXqMYobTzHxnasrrE6toXvOrkaAe6QT4vcZCwLtk+W
      8D3jyk3NatqhnVrWdWxsy8Z1LBzbxum82+bdlhUJNgTxAEKuye/QrCAgAhByjghAyDUiACHX
      iACEXLMuAlBJxIVLV7qfV+ZmOHvuIu04n/P/heeHdRHAzWuXWVhZzT6l3Lwzx+EDW7h+c3bg
      eYLwrBn6wXxz8Q5fzbdJWkvUmiHVEnheiWJ1HOv2DEqp7iuOJdOeMFoMLQC/sp0TxypcvHge
      10pZrWl0ssyXZ5ap7nwV27a7Q+wyECaMGus2EpwkZtGjRCkcC9pRQrEQdFMkyUiwMIrIVAgh
      18hjUCHXiACEXCMCEHKNCEDINSIAIdeIAIRcIwIQco0IQMg1IgAh14gAhFwjcxM2Aa0V8fn/
      BmHdrF7sZ6/CWLaKcQkrqJr1UyzHZFC0bZPMLYdr9WwmwwtAaxqNOtgepVIBC4jaLVphRKFU
      IZDkwgBYXhlVe4CuzZrViaMaur2KjhrosGaW/3Zck3giSyhhuQXzHlTNyy9DUMUKxsy6+EFP
      SJZfNQkqHBdsxwgpS1kqIlqb4SfDpS2uXLtDY/kB+9/4HlMlhzOnPqEyuY1tO/cyXg5kMtwT
      0E0mETV773HDLO8d1kyS7aiBDuvocBXiptlur2bf1dBJZHIK226WU9gzXsQvYwUVCMay7THj
      cbyi2fZL5r0wZs6x/UxIHjheL0/xC8jwFukUKXsps5FNJTBdilIxYHlhjqA6RbXoSUDME+OB
      P242v5aM0Pra+2PpiChpm3Xwk7CXZKK9AlEDFTXQ7VVYvgdJC8KaSZkU1SBcxSw8bpYizzJM
      Gy/iFrGK4+CVsQpV43H8Cngl8Mtm2y+DXzUJKtwgE0+2PUQWl41kaA+g4pBQ2yxMnyPZ9hoH
      twasrDQoem3OX6/x9huHxAM8R+g0NiJKI5NXtz8lUmul12SLasYDRQ3jgcK6SaMU1h7NENPJ
      RWZ74JWwSlu6zTnLr5rcY8FY1g+qYBUnTfZ6xwe/ZDK5dDJpbkBTbh0sUjN95SLaG+PVCiwu
      1YnqC9xcanD0yNHhLy9sKpaTNXt4TEK4J0BrnXmiOMtg3+eVoia6uZDlG2ui28vmvTZrUiS1
      V02TThnhdZMBpjGgjRcKjKexCmNZX6hkBBSYRH1WYbwvPZJJOWsS+pUezSzf+b0SECOMGrqT
      wE9lSft0ik6iLAVSzXid9iqENXRsPJLOmnLdPlHSzpqA7e65WPY3+j1ikcLIYVl2lmq1b9+3
      OL+XT0yZ7JeYd52GPZHETQhXxQMI+UZGgoVcIwIQco0IQMg1IgAh14gAhFwjAhByjQhAyDUi
      ACHXiACEXDO8ALQmCkOiOKYzpKxUShhFbMIgsyAMxfBzE1Sbq1dv0Fxd5OUTv8nWksWls58T
      pZqJvUd5aef4OhRTEDaGdQmImSi5LK14lAMLiMCd5MRbe7lwYQa1vSoBMcLIMrQAVBKzbf8r
      6OgsD5bbHNjqESdN2o0a2gskQ4ww0gzfB1AxVy+eZ1lX2FGBxaUWB/ZMcXl6jpcP7VqHIgrC
      xiHToYVcI49BhVwjAhByjQhAyDUiACHXiACEXCMCEHKNCEDINSIAIdesiwCW5me592C+Oxt0
      dXGO6elpVhrhelxeEDaM4QWQtFiuJ7QeTPOgngJw6/ZdJrdsoeCP5orAgtBheAG4RabGXJbT
      ElMlc7lqyePGlYvcmV0e+vKCsJEMLQAd17hye5m333wdxwKtU0rjO/jO0YPUluvrUUZB2DCG
      FoBKwdEtvjx3jnqzxdJKk8COmZ5pcPz1A+tRRkHYMDZ8Nmjn8mma4jjSJxBGiw2fn6y17r6U
      Uht9u5FFa53rZHVKKWx79J66b7gAbNvuegHxAPlmFP//mxIQIwijioRorTdpmzNnLtAOQw4f
      O8a1CxewgwrHX3uJUx99yuHv/ybFpa84fbfOru07OPzSnmdd4lwzeo2y5x074I0Tb1ItuKzO
      32PP0d9g17hDI/V5ad9utNLUmgmBN5pNgrwhAlh3FOe/+ILdh99gouCSJql5Aua62LbpBO98
      +SjvnjjB0tzdZ1xWQZpA60zaXGChmZJev8Irhw+zdOkcdnELU+0FLt6fhVqM3jXGvfvzlMa3
      P+vi5p7/D/pCEdAqrLclAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='score by region' width='192'>
      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
      H29H9PFF2dgKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 ' width='192'>
      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
      ENREAISg9v8BCgmyItu49skAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
